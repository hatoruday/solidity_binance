{
	"id": "7fe87a0f22b28c5e6109b721d89d1234",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"erc1967/UUPS-Proxy-V1.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract MyToken is Initializable, OwnableUpgradeable, UUPSUpgradeable {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    uint256 public count;\n\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize() initializer public {\n        __Ownable_init();\n        __UUPSUpgradeable_init();\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        onlyOwner\n        override\n    {\n\n    }\n    \n    function inc() external {\n            count++;\n    }\n}"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 503,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 506,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1172,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"IERC1967Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"IERC1822ProxiableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ERC1967UpgradeUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							},
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 503,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 506,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 485,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"IBeaconUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 503,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 506,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeTo(address)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable state-variable-assignment"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 503,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 506,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 485,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 800,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205022aabed293ea6ba7438c5eb64efa5971a972032590b4885a902fbf907ca9c464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205022aabed293ea6ba7438c5eb64efa5971a972032590b4885a902fbf907ca9c464736f6c63430008150033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0x22 0xAA 0xBE 0xD2 SWAP4 0xEA PUSH12 0xA7438C5EB64EFA5971A97203 0x25 SWAP1 0xB4 DUP9 GAS SWAP1 0x2F 0xBF SWAP1 PUSH29 0xA9C464736F6C6343000815003300000000000000000000000000000000 ",
							"sourceMap": "194:9180:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205022aabed293ea6ba7438c5eb64efa5971a972032590b4885a902fbf907ca9c464736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0x22 0xAA 0xBE 0xD2 SWAP4 0xEA PUSH12 0xA7438C5EB64EFA5971A97203 0x25 SWAP1 0xB4 DUP9 GAS SWAP1 0x2F 0xBF SWAP1 PUSH29 0xA9C464736F6C6343000815003300000000000000000000000000000000 ",
							"sourceMap": "194:9180:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205022aabed293ea6ba7438c5eb64efa5971a972032590b4885a902fbf907ca9c464736f6c63430008150033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"erc1967/UUPS-Proxy-V1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 503,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 506,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1172,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"StorageSlotUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1420:4116  library StorageSlotUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1420:4116  library StorageSlotUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220986b7e425553bd07a3f1eaed42ee57e79e1f555f524716b94212c6a7c597a8a164736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220986b7e425553bd07a3f1eaed42ee57e79e1f555f524716b94212c6a7c597a8a164736f6c63430008150033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 PUSH12 0x7E425553BD07A3F1EAED42EE JUMPI 0xE7 SWAP15 0x1F SSTORE PUSH0 MSTORE SELFBALANCE AND 0xB9 TIMESTAMP SLT 0xC6 0xA7 0xC5 SWAP8 0xA8 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "1420:2696:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2696:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220986b7e425553bd07a3f1eaed42ee57e79e1f555f524716b94212c6a7c597a8a164736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 PUSH12 0x7E425553BD07A3F1EAED42EE JUMPI 0xE7 SWAP15 0x1F SSTORE PUSH0 MSTORE SELFBALANCE AND 0xB9 TIMESTAMP SLT 0xC6 0xA7 0xC5 SWAP8 0xA8 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "1420:2696:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220986b7e425553bd07a3f1eaed42ee57e79e1f555f524716b94212c6a7c597a8a164736f6c63430008150033",
									".code": [
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"erc1967/UUPS-Proxy-V1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc1967/UUPS-Proxy-V1.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "count",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "inc",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeTo(address)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"count": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc1967/UUPS-Proxy-V1.sol\":288:800  contract MyToken is Initializable, OwnableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1332:1336  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1289:1337  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"erc1967/UUPS-Proxy-V1.sol\":445:498  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"erc1967/UUPS-Proxy-V1.sol\":469:491  _disableInitializers() */\n  tag_4\n    /* \"erc1967/UUPS-Proxy-V1.sol\":469:489  _disableInitializers */\n  tag_5\n    /* \"erc1967/UUPS-Proxy-V1.sol\":469:491  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"erc1967/UUPS-Proxy-V1.sol\":288:800  contract MyToken is Initializable, OwnableUpgradeable, UUPSUpgradeable {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5939:6219  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6007:6020  _initializing */\n  sload(0x00)\n  0x0100\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6006:6020  !_initializing */\n  iszero\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5998:6064  require(!_initializing, \"Initializable: contract is initializing\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5998:6064  require(!_initializing, \"Initializable: contract is initializing\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x27\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:328   */\n  0x496e697469616c697a61626c653a20636f6e747261637420697320696e697469\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:329   */\n  mstore\n  shl(0xc8, 0x616c697a696e67)\n    /* \"#utility.yul\":345:363   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":338:375   */\n  mstore\n    /* \"#utility.yul\":392:411   */\n  0x84\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5998:6064  require(!_initializing, \"Initializable: contract is initializing\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6078:6090  _initialized */\n  sload(0x00)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6094:6109  type(uint8).max */\n  0xff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6078:6090  _initialized */\n  swap1\n  dup2\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6078:6109  _initialized != type(uint8).max */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6074:6213  if (_initialized != type(uint8).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6125:6137  _initialized */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6125:6155  _initialized = type(uint8).max */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6140:6155  type(uint8).max */\n  0xff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6125:6155  _initialized = type(uint8).max */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6174:6202  Initialized(type(uint8).max) */\n  mload(0x40)\n    /* \"#utility.yul\":564:600   */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6174:6202  Initialized(type(uint8).max) */\n  0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n  swap1\n    /* \"#utility.yul\":552:554   */\n  0x20\n    /* \"#utility.yul\":537:555   */\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6174:6202  Initialized(type(uint8).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6074:6213  if (_initialized != type(uint8).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5939:6219  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":422:606   */\ntag_14:\n    /* \"erc1967/UUPS-Proxy-V1.sol\":288:800  contract MyToken is Initializable, OwnableUpgradeable, UUPSUpgradeable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x04858cf527bbe93978e168f56532450d1459771814ce695a45178f6b6b92373a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"erc1967/UUPS-Proxy-V1.sol\":288:800  contract MyToken is Initializable, OwnableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x52d1902d\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x06661abd\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3659cfe6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x371303c0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"erc1967/UUPS-Proxy-V1.sol\":418:438  uint256 public count */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      sload(0xc9)\n      dup2\n      jump\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"erc1967/UUPS-Proxy-V1.sol\":418:438  uint256 public count */\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3387:3582  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"erc1967/UUPS-Proxy-V1.sol\":746:798  function inc() external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_18\n      tag_24\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3901:4121  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_5:\n      tag_18\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_13\n      tag_31\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_18\n      tag_36\n      jump\t// in\n        /* \"erc1967/UUPS-Proxy-V1.sol\":504:612  function initialize() initializer public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_18\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      sload(0x33)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2025:2076   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2013:2015   */\n      0x20\n        /* \"#utility.yul\":1998:2016   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      tag_15\n        /* \"#utility.yul\":1879:2082   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_18\n      tag_47\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3387:3582  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n    tag_21:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1898:1904  __self */\n      immutable(\"0x04858cf527bbe93978e168f56532450d1459771814ce695a45178f6b6b92373a\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1889:1893  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1873:1953  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1995:2001  __self */\n      immutable(\"0x04858cf527bbe93978e168f56532450d1459771814ce695a45178f6b6b92373a\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      tag_53\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1536:1601  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1457:1608  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1963:2050  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_57\n      jump\t// in\n    tag_55:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3468:3504  _authorizeUpgrade(newImplementation) */\n      tag_59\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3486:3503  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3468:3485  _authorizeUpgrade */\n      tag_60\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3468:3504  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3555:3567  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3565:3566  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3555:3567  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3514:3575  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      tag_61\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3536:3553  newImplementation */\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3555:3567  new bytes(0) */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3514:3535  _upgradeToAndCallUUPS */\n      tag_66\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3514:3575  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3387:3582  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n      pop\n      jump\t// out\n        /* \"erc1967/UUPS-Proxy-V1.sol\":746:798  function inc() external {... */\n    tag_24:\n        /* \"erc1967/UUPS-Proxy-V1.sol\":784:789  count */\n      0xc9\n        /* \"erc1967/UUPS-Proxy-V1.sol\":784:791  count++ */\n      dup1\n      sload\n      swap1\n        /* \"erc1967/UUPS-Proxy-V1.sol\":784:789  count */\n      0x00\n        /* \"erc1967/UUPS-Proxy-V1.sol\":784:791  count++ */\n      tag_68\n      dup4\n      tag_69\n      jump\t// in\n    tag_68:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"erc1967/UUPS-Proxy-V1.sol\":746:798  function inc() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3901:4121  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_28:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1898:1904  __self */\n      immutable(\"0x04858cf527bbe93978e168f56532450d1459771814ce695a45178f6b6b92373a\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1889:1893  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1873:1953  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1995:2001  __self */\n      immutable(\"0x04858cf527bbe93978e168f56532450d1459771814ce695a45178f6b6b92373a\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      tag_73\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1536:1601  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1457:1608  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1963:2050  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_57\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4016:4052  _authorizeUpgrade(newImplementation) */\n      tag_77\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4034:4051  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4016:4033  _authorizeUpgrade */\n      tag_60\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4016:4052  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4062:4114  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      tag_78\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4084:4101  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4103:4107  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4109:4113  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4062:4083  _upgradeToAndCallUUPS */\n      tag_66\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4062:4114  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3901:4121  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3084:3091  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2324:2328  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2333:2339  __self */\n      immutable(\"0x04858cf527bbe93978e168f56532450d1459771814ce695a45178f6b6b92373a\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2316:2339  address(this) == __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3352:3354   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3334:3355   */\n      mstore\n        /* \"#utility.yul\":3391:3393   */\n      0x38\n        /* \"#utility.yul\":3371:3389   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3364:3394   */\n      mstore\n        /* \"#utility.yul\":3430:3464   */\n      0x555550535570677261646561626c653a206d757374206e6f742062652063616c\n        /* \"#utility.yul\":3410:3428   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3403:3465   */\n      mstore\n        /* \"#utility.yul\":3501:3527   */\n      0x6c6564207468726f7567682064656c656761746563616c6c0000000000000000\n        /* \"#utility.yul\":3481:3499   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3474:3528   */\n      mstore\n        /* \"#utility.yul\":3545:3564   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_51\n        /* \"#utility.yul\":3150:3570   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n    tag_80:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_85\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2158  _transferOwnership(address(0)) */\n      tag_88\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2155:2156  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2146  _transferOwnership */\n      tag_89\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2158  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"erc1967/UUPS-Proxy-V1.sol\":504:612  function initialize() initializer public {... */\n    tag_39:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3302:3315  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3380:3381  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_95\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3426:3430  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_95\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3448  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3777:3779   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3759:3780   */\n      mstore\n        /* \"#utility.yul\":3816:3818   */\n      0x2e\n        /* \"#utility.yul\":3796:3814   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3789:3819   */\n      mstore\n        /* \"#utility.yul\":3855:3889   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":3835:3853   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3828:3890   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":3906:3924   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3899:3943   */\n      mstore\n        /* \"#utility.yul\":3960:3979   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_51\n        /* \"#utility.yul\":3575:3985   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3548  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3552  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3609  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3616  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n    tag_99:\n        /* \"erc1967/UUPS-Proxy-V1.sol\":555:571  __Ownable_init() */\n      tag_101\n        /* \"erc1967/UUPS-Proxy-V1.sol\":555:569  __Ownable_init */\n      tag_102\n        /* \"erc1967/UUPS-Proxy-V1.sol\":555:571  __Ownable_init() */\n      jump\t// in\n    tag_101:\n        /* \"erc1967/UUPS-Proxy-V1.sol\":581:605  __UUPSUpgradeable_init() */\n      tag_103\n        /* \"erc1967/UUPS-Proxy-V1.sol\":581:603  __UUPSUpgradeable_init */\n      tag_104\n        /* \"erc1967/UUPS-Proxy-V1.sol\":581:605  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3651:3665  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n      iszero\n      tag_61\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3697:3702  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3702  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":4142:4178   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":4130:4132   */\n      0x20\n        /* \"#utility.yul\":4115:4133   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3269:3752  {... */\n      pop\n        /* \"erc1967/UUPS-Proxy-V1.sol\":504:612  function initialize() initializer public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2402:2424  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4391:4393   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4373:4394   */\n      mstore\n        /* \"#utility.yul\":4430:4432   */\n      0x26\n        /* \"#utility.yul\":4410:4428   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4403:4433   */\n      mstore\n        /* \"#utility.yul\":4469:4503   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4449:4467   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4442:4504   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4520:4538   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4513:4549   */\n      mstore\n        /* \"#utility.yul\":4566:4585   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_51\n        /* \"#utility.yul\":4189:4591   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2505  _transferOwnership(newOwner) */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2496:2504  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2495  _transferOwnership */\n      tag_89\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2505  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"erc1967/UUPS-Proxy-V1.sol\":618:736  function _authorizeUpgrade(address newImplementation)... */\n    tag_60:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2820:3764  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_66:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":971:1037  0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143 */\n      0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3236:3295  StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3232:3758  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3311:3348  _setImplementation(newImplementation) */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3330:3347  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3311:3329  _setImplementation */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3311:3348  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2820:3764  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3232:3758  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3412:3429  newImplementation */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3383:3444  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3383:3446  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_129\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_130\n      swap2\n      dup2\n      add\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      0x01\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3379:3681  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3610:3666  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4987:4989   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3610:3666  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4969:4990   */\n      mstore\n        /* \"#utility.yul\":5026:5028   */\n      0x2e\n        /* \"#utility.yul\":5006:5024   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4999:5029   */\n      mstore\n        /* \"#utility.yul\":5065:5099   */\n      0x45524331393637557067726164653a206e657720696d706c656d656e74617469\n        /* \"#utility.yul\":5045:5063   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5038:5100   */\n      mstore\n      shl(0x90, 0x6f6e206973206e6f742055555053)\n        /* \"#utility.yul\":5116:5134   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5109:5153   */\n      mstore\n        /* \"#utility.yul\":5170:5189   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3610:3666  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      tag_51\n        /* \"#utility.yul\":4785:5195   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3379:3681  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_132:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3496:3524  slot == _IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3488:3570  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5402:5404   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3488:3570  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5384:5405   */\n      mstore\n        /* \"#utility.yul\":5441:5443   */\n      0x29\n        /* \"#utility.yul\":5421:5439   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5414:5444   */\n      mstore\n        /* \"#utility.yul\":5480:5514   */\n      0x45524331393637557067726164653a20756e737570706f727465642070726f78\n        /* \"#utility.yul\":5460:5478   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5453:5515   */\n      mstore\n      shl(0xba, 0x1a58589b1955555251)\n        /* \"#utility.yul\":5531:5549   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5524:5563   */\n      mstore\n        /* \"#utility.yul\":5580:5599   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3488:3570  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_51\n        /* \"#utility.yul\":5200:5605   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3488:3570  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3447:3585  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3694:3747  _upgradeToAndCall(newImplementation, data, forceCall) */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3712:3729  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3731:3735  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3737:3746  forceCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3694:3711  _upgradeToAndCall */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3694:3747  _upgradeToAndCall(newImplementation, data, forceCall) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5812:5814   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5794:5815   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5831:5849   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5824:5854   */\n      mstore\n        /* \"#utility.yul\":5890:5924   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5870:5888   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5863:5925   */\n      mstore\n        /* \"#utility.yul\":5942:5960   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_51\n        /* \"#utility.yul\":5610:5966   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2666:2853  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2774:2791  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2774:2791  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2739:2755  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2729:2853  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2666:2853  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_156\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_88\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_159\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1042:1109  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_156\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1699:1980  function _setImplementation(address newImplementation) private {... */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      dup2\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1772:1878  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6585:6587   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1772:1878  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6567:6588   */\n      mstore\n        /* \"#utility.yul\":6624:6626   */\n      0x2d\n        /* \"#utility.yul\":6604:6622   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6597:6627   */\n      mstore\n        /* \"#utility.yul\":6663:6697   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":6643:6661   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6636:6698   */\n      mstore\n      shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n        /* \"#utility.yul\":6714:6732   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6707:6750   */\n      mstore\n        /* \"#utility.yul\":6767:6786   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1772:1878  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_51\n        /* \"#utility.yul\":6383:6792   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1772:1878  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n    tag_168:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1888:1973  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1699:1980  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2372:2648  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2480:2509  _upgradeTo(newImplementation) */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2491:2508  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2480:2490  _upgradeTo */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2480:2509  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2537:2538  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2523:2527  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2523:2534  data.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2523:2538  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2523:2551  data.length > 0 || forceCall */\n      dup1\n      tag_175\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2542:2551  forceCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2523:2551  data.length > 0 || forceCall */\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2519:2642  if (data.length > 0 || forceCall) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2567:2631  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2607:2624  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2626:2630  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2567:2606  AddressUpgradeable.functionDelegateCall */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2567:2631  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_177:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2372:2648  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_159:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_156\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_88\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_89\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2086:2238  function _upgradeTo(address newImplementation) internal {... */\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2152:2189  _setImplementation(newImplementation) */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2171:2188  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2152:2170  _setImplementation */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2152:2189  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2204:2231  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2086:2238  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6685:6883  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6768:6780  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6876  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6820:6826  target */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6828:6832  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6876  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6819  functionDelegateCall */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6876  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6792:6876  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6685:6883  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7069:7394  function functionDelegateCall(... */\n    tag_190:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7210:7222  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7235:7247  bool success */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7249:7272  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7276:7282  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7276:7295  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7296:7300  data */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7276:7301  target.delegatecall(data) */\n      mload(0x40)\n      tag_192\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_196\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_195)\n    tag_196:\n      0x60\n      swap2\n      pop\n    tag_195:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7234:7301  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7318:7387  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7345:7351  target */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7353:7360  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7362:7372  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7374:7386  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7318:7344  verifyCallResultFromTarget */\n      tag_198\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7318:7387  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7311:7387  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap7\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7069:7394  function functionDelegateCall(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7682:8310  function verifyCallResultFromTarget(... */\n    tag_198:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7862:7874  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7890:7897  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7886:8304  if (success) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7927  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7934  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7938:7939  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7939  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7913:8199  if (returndata.length == 0) {... */\n      tag_203\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7546:7548   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7528:7549   */\n      mstore\n        /* \"#utility.yul\":7585:7587   */\n      0x1d\n        /* \"#utility.yul\":7565:7583   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7558:7588   */\n      mstore\n        /* \"#utility.yul\":7624:7655   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":7604:7622   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7597:7656   */\n      mstore\n        /* \"#utility.yul\":7673:7691   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n      tag_51\n        /* \"#utility.yul\":7344:7697   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n    tag_203:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8219:8229  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8212:8229  return returndata */\n      jump(tag_207)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7886:8304  if (success) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8293  _revert(returndata, errorMessage) */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8268:8278  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8280:8292  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8267  _revert */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8293  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7682:8310  function verifyCallResultFromTarget(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8832:9372  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8991:9008  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8991:9012  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8987:9366  if (returndata.length > 0) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9219:9229  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9213:9230  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9275:9290  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9262:9272  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9258:9260  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9254:9273  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9247:9291  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8987:9366  if (returndata.length > 0) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9342:9354  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9335:9355  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n        /* \"#utility.yul\":196:369   */\n    tag_214:\n        /* \"#utility.yul\":264:284   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":313:344   */\n      dup2\n      and\n        /* \"#utility.yul\":303:345   */\n      dup2\n      eq\n        /* \"#utility.yul\":293:363   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":359:360   */\n      0x00\n        /* \"#utility.yul\":356:357   */\n      dup1\n        /* \"#utility.yul\":349:361   */\n      revert\n        /* \"#utility.yul\":293:363   */\n    tag_219:\n        /* \"#utility.yul\":196:369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":374:560   */\n    tag_20:\n        /* \"#utility.yul\":433:439   */\n      0x00\n        /* \"#utility.yul\":486:488   */\n      0x20\n        /* \"#utility.yul\":474:483   */\n      dup3\n        /* \"#utility.yul\":465:472   */\n      dup5\n        /* \"#utility.yul\":461:484   */\n      sub\n        /* \"#utility.yul\":457:489   */\n      slt\n        /* \"#utility.yul\":454:506   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":502:503   */\n      0x00\n        /* \"#utility.yul\":499:500   */\n      dup1\n        /* \"#utility.yul\":492:504   */\n      revert\n        /* \"#utility.yul\":454:506   */\n    tag_221:\n        /* \"#utility.yul\":525:554   */\n      tag_189\n        /* \"#utility.yul\":544:553   */\n      dup3\n        /* \"#utility.yul\":525:554   */\n      tag_214\n      jump\t// in\n        /* \"#utility.yul\":565:692   */\n    tag_64:\n        /* \"#utility.yul\":626:636   */\n      0x4e487b71\n        /* \"#utility.yul\":621:624   */\n      0xe0\n        /* \"#utility.yul\":617:637   */\n      shl\n        /* \"#utility.yul\":614:615   */\n      0x00\n        /* \"#utility.yul\":607:638   */\n      mstore\n        /* \"#utility.yul\":657:661   */\n      0x41\n        /* \"#utility.yul\":654:655   */\n      0x04\n        /* \"#utility.yul\":647:662   */\n      mstore\n        /* \"#utility.yul\":681:685   */\n      0x24\n        /* \"#utility.yul\":678:679   */\n      0x00\n        /* \"#utility.yul\":671:686   */\n      revert\n        /* \"#utility.yul\":697:1692   */\n    tag_27:\n        /* \"#utility.yul\":774:780   */\n      0x00\n        /* \"#utility.yul\":782:788   */\n      dup1\n        /* \"#utility.yul\":835:837   */\n      0x40\n        /* \"#utility.yul\":823:832   */\n      dup4\n        /* \"#utility.yul\":814:821   */\n      dup6\n        /* \"#utility.yul\":810:833   */\n      sub\n        /* \"#utility.yul\":806:838   */\n      slt\n        /* \"#utility.yul\":803:855   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":851:852   */\n      0x00\n        /* \"#utility.yul\":848:849   */\n      dup1\n        /* \"#utility.yul\":841:853   */\n      revert\n        /* \"#utility.yul\":803:855   */\n    tag_225:\n        /* \"#utility.yul\":874:903   */\n      tag_226\n        /* \"#utility.yul\":893:902   */\n      dup4\n        /* \"#utility.yul\":874:903   */\n      tag_214\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":864:903   */\n      swap2\n      pop\n        /* \"#utility.yul\":954:956   */\n      0x20\n        /* \"#utility.yul\":943:952   */\n      dup4\n        /* \"#utility.yul\":939:957   */\n      add\n        /* \"#utility.yul\":926:958   */\n      calldataload\n        /* \"#utility.yul\":977:995   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1018:1020   */\n      dup1\n        /* \"#utility.yul\":1010:1016   */\n      dup3\n        /* \"#utility.yul\":1007:1021   */\n      gt\n        /* \"#utility.yul\":1004:1038   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":1034:1035   */\n      0x00\n        /* \"#utility.yul\":1031:1032   */\n      dup1\n        /* \"#utility.yul\":1024:1036   */\n      revert\n        /* \"#utility.yul\":1004:1038   */\n    tag_227:\n        /* \"#utility.yul\":1072:1078   */\n      dup2\n        /* \"#utility.yul\":1061:1070   */\n      dup6\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1047:1079   */\n      swap2\n      pop\n        /* \"#utility.yul\":1117:1124   */\n      dup6\n        /* \"#utility.yul\":1110:1114   */\n      0x1f\n        /* \"#utility.yul\":1106:1108   */\n      dup4\n        /* \"#utility.yul\":1102:1115   */\n      add\n        /* \"#utility.yul\":1098:1125   */\n      slt\n        /* \"#utility.yul\":1088:1143   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":1139:1140   */\n      0x00\n        /* \"#utility.yul\":1136:1137   */\n      dup1\n        /* \"#utility.yul\":1129:1141   */\n      revert\n        /* \"#utility.yul\":1088:1143   */\n    tag_228:\n        /* \"#utility.yul\":1175:1177   */\n      dup2\n        /* \"#utility.yul\":1162:1178   */\n      calldataload\n        /* \"#utility.yul\":1197:1199   */\n      dup2\n        /* \"#utility.yul\":1193:1195   */\n      dup2\n        /* \"#utility.yul\":1190:1200   */\n      gt\n        /* \"#utility.yul\":1187:1223   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":1203:1221   */\n      tag_230\n      tag_64\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1278:1280   */\n      0x40\n        /* \"#utility.yul\":1272:1281   */\n      mload\n        /* \"#utility.yul\":1246:1248   */\n      0x1f\n        /* \"#utility.yul\":1332:1345   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1328:1350   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1352:1354   */\n      0x3f\n        /* \"#utility.yul\":1324:1355   */\n      add\n        /* \"#utility.yul\":1320:1360   */\n      and\n        /* \"#utility.yul\":1308:1361   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1376:1394   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1396:1418   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1373:1419   */\n      or\n        /* \"#utility.yul\":1370:1442   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":1422:1440   */\n      tag_232\n      tag_64\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1462:1472   */\n      dup2\n        /* \"#utility.yul\":1458:1460   */\n      0x40\n        /* \"#utility.yul\":1451:1473   */\n      mstore\n        /* \"#utility.yul\":1497:1499   */\n      dup3\n        /* \"#utility.yul\":1489:1495   */\n      dup2\n        /* \"#utility.yul\":1482:1500   */\n      mstore\n        /* \"#utility.yul\":1537:1544   */\n      dup9\n        /* \"#utility.yul\":1532:1534   */\n      0x20\n        /* \"#utility.yul\":1527:1529   */\n      dup5\n        /* \"#utility.yul\":1523:1525   */\n      dup8\n        /* \"#utility.yul\":1519:1530   */\n      add\n        /* \"#utility.yul\":1515:1535   */\n      add\n        /* \"#utility.yul\":1512:1545   */\n      gt\n        /* \"#utility.yul\":1509:1562   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":1558:1559   */\n      0x00\n        /* \"#utility.yul\":1555:1556   */\n      dup1\n        /* \"#utility.yul\":1548:1560   */\n      revert\n        /* \"#utility.yul\":1509:1562   */\n    tag_233:\n        /* \"#utility.yul\":1614:1616   */\n      dup3\n        /* \"#utility.yul\":1609:1611   */\n      0x20\n        /* \"#utility.yul\":1605:1607   */\n      dup7\n        /* \"#utility.yul\":1601:1612   */\n      add\n        /* \"#utility.yul\":1596:1598   */\n      0x20\n        /* \"#utility.yul\":1588:1594   */\n      dup4\n        /* \"#utility.yul\":1584:1599   */\n      add\n        /* \"#utility.yul\":1571:1617   */\n      calldatacopy\n        /* \"#utility.yul\":1659:1660   */\n      0x00\n        /* \"#utility.yul\":1654:1656   */\n      0x20\n        /* \"#utility.yul\":1649:1651   */\n      dup5\n        /* \"#utility.yul\":1641:1647   */\n      dup4\n        /* \"#utility.yul\":1637:1652   */\n      add\n        /* \"#utility.yul\":1633:1657   */\n      add\n        /* \"#utility.yul\":1626:1661   */\n      mstore\n        /* \"#utility.yul\":1680:1686   */\n      dup1\n        /* \"#utility.yul\":1670:1686   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":697:1692   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2087:2495   */\n    tag_52:\n        /* \"#utility.yul\":2289:2291   */\n      0x20\n        /* \"#utility.yul\":2271:2292   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2328:2330   */\n      0x2c\n        /* \"#utility.yul\":2308:2326   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2301:2331   */\n      mstore\n        /* \"#utility.yul\":2367:2401   */\n      0x46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n        /* \"#utility.yul\":2362:2364   */\n      0x40\n        /* \"#utility.yul\":2347:2365   */\n      dup3\n      add\n        /* \"#utility.yul\":2340:2402   */\n      mstore\n      shl(0xa2, 0x19195b1959d85d1958d85b1b)\n        /* \"#utility.yul\":2433:2435   */\n      0x60\n        /* \"#utility.yul\":2418:2436   */\n      dup3\n      add\n        /* \"#utility.yul\":2411:2453   */\n      mstore\n        /* \"#utility.yul\":2485:2488   */\n      0x80\n        /* \"#utility.yul\":2470:2489   */\n      add\n      swap1\n        /* \"#utility.yul\":2087:2495   */\n      jump\t// out\n        /* \"#utility.yul\":2500:2908   */\n    tag_57:\n        /* \"#utility.yul\":2702:2704   */\n      0x20\n        /* \"#utility.yul\":2684:2705   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2741:2743   */\n      0x2c\n        /* \"#utility.yul\":2721:2739   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2714:2744   */\n      mstore\n        /* \"#utility.yul\":2780:2814   */\n      0x46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n        /* \"#utility.yul\":2775:2777   */\n      0x40\n        /* \"#utility.yul\":2760:2778   */\n      dup3\n      add\n        /* \"#utility.yul\":2753:2815   */\n      mstore\n      shl(0xa0, 0x6163746976652070726f7879)\n        /* \"#utility.yul\":2846:2848   */\n      0x60\n        /* \"#utility.yul\":2831:2849   */\n      dup3\n      add\n        /* \"#utility.yul\":2824:2866   */\n      mstore\n        /* \"#utility.yul\":2898:2901   */\n      0x80\n        /* \"#utility.yul\":2883:2902   */\n      add\n      swap1\n        /* \"#utility.yul\":2500:2908   */\n      jump\t// out\n        /* \"#utility.yul\":2913:3145   */\n    tag_69:\n        /* \"#utility.yul\":2952:2955   */\n      0x00\n        /* \"#utility.yul\":2973:2990   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":2970:3110   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":3032:3042   */\n      0x4e487b71\n        /* \"#utility.yul\":3027:3030   */\n      0xe0\n        /* \"#utility.yul\":3023:3043   */\n      shl\n        /* \"#utility.yul\":3020:3021   */\n      0x00\n        /* \"#utility.yul\":3013:3044   */\n      mstore\n        /* \"#utility.yul\":3067:3071   */\n      0x11\n        /* \"#utility.yul\":3064:3065   */\n      0x04\n        /* \"#utility.yul\":3057:3072   */\n      mstore\n        /* \"#utility.yul\":3095:3099   */\n      0x24\n        /* \"#utility.yul\":3092:3093   */\n      0x00\n        /* \"#utility.yul\":3085:3100   */\n      revert\n        /* \"#utility.yul\":2970:3110   */\n    tag_239:\n      pop\n        /* \"#utility.yul\":3137:3138   */\n      0x01\n        /* \"#utility.yul\":3126:3139   */\n      add\n      swap1\n        /* \"#utility.yul\":2913:3145   */\n      jump\t// out\n        /* \"#utility.yul\":4596:4780   */\n    tag_131:\n        /* \"#utility.yul\":4666:4672   */\n      0x00\n        /* \"#utility.yul\":4719:4721   */\n      0x20\n        /* \"#utility.yul\":4707:4716   */\n      dup3\n        /* \"#utility.yul\":4698:4705   */\n      dup5\n        /* \"#utility.yul\":4694:4717   */\n      sub\n        /* \"#utility.yul\":4690:4722   */\n      slt\n        /* \"#utility.yul\":4687:4739   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":4735:4736   */\n      0x00\n        /* \"#utility.yul\":4732:4733   */\n      dup1\n        /* \"#utility.yul\":4725:4737   */\n      revert\n        /* \"#utility.yul\":4687:4739   */\n    tag_245:\n      pop\n        /* \"#utility.yul\":4758:4774   */\n      mload\n      swap2\n        /* \"#utility.yul\":4596:4780   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5971:6378   */\n    tag_156:\n        /* \"#utility.yul\":6173:6175   */\n      0x20\n        /* \"#utility.yul\":6155:6176   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6212:6214   */\n      0x2b\n        /* \"#utility.yul\":6192:6210   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6185:6215   */\n      mstore\n        /* \"#utility.yul\":6251:6285   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":6246:6248   */\n      0x40\n        /* \"#utility.yul\":6231:6249   */\n      dup3\n      add\n        /* \"#utility.yul\":6224:6286   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":6317:6319   */\n      0x60\n        /* \"#utility.yul\":6302:6320   */\n      dup3\n      add\n        /* \"#utility.yul\":6295:6336   */\n      mstore\n        /* \"#utility.yul\":6368:6371   */\n      0x80\n        /* \"#utility.yul\":6353:6372   */\n      add\n      swap1\n        /* \"#utility.yul\":5971:6378   */\n      jump\t// out\n        /* \"#utility.yul\":6797:7047   */\n    tag_215:\n        /* \"#utility.yul\":6882:6883   */\n      0x00\n        /* \"#utility.yul\":6892:7005   */\n    tag_252:\n        /* \"#utility.yul\":6906:6912   */\n      dup4\n        /* \"#utility.yul\":6903:6904   */\n      dup2\n        /* \"#utility.yul\":6900:6913   */\n      lt\n        /* \"#utility.yul\":6892:7005   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":6982:6993   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":6976:6994   */\n      mload\n        /* \"#utility.yul\":6963:6974   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":6956:6995   */\n      mstore\n        /* \"#utility.yul\":6928:6930   */\n      0x20\n        /* \"#utility.yul\":6921:6931   */\n      add\n        /* \"#utility.yul\":6892:7005   */\n      jump(tag_252)\n    tag_254:\n      pop\n      pop\n        /* \"#utility.yul\":7039:7040   */\n      0x00\n        /* \"#utility.yul\":7021:7037   */\n      swap2\n      add\n        /* \"#utility.yul\":7014:7041   */\n      mstore\n        /* \"#utility.yul\":6797:7047   */\n      jump\t// out\n        /* \"#utility.yul\":7052:7339   */\n    tag_193:\n        /* \"#utility.yul\":7181:7184   */\n      0x00\n        /* \"#utility.yul\":7219:7225   */\n      dup3\n        /* \"#utility.yul\":7213:7226   */\n      mload\n        /* \"#utility.yul\":7235:7301   */\n      tag_256\n        /* \"#utility.yul\":7294:7300   */\n      dup2\n        /* \"#utility.yul\":7289:7292   */\n      dup5\n        /* \"#utility.yul\":7282:7286   */\n      0x20\n        /* \"#utility.yul\":7274:7280   */\n      dup8\n        /* \"#utility.yul\":7270:7287   */\n      add\n        /* \"#utility.yul\":7235:7301   */\n      tag_215\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7317:7333   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":7052:7339   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7702:8098   */\n    tag_213:\n        /* \"#utility.yul\":7851:7853   */\n      0x20\n        /* \"#utility.yul\":7840:7849   */\n      dup2\n        /* \"#utility.yul\":7833:7854   */\n      mstore\n        /* \"#utility.yul\":7814:7818   */\n      0x00\n        /* \"#utility.yul\":7883:7889   */\n      dup3\n        /* \"#utility.yul\":7877:7890   */\n      mload\n        /* \"#utility.yul\":7926:7932   */\n      dup1\n        /* \"#utility.yul\":7921:7923   */\n      0x20\n        /* \"#utility.yul\":7910:7919   */\n      dup5\n        /* \"#utility.yul\":7906:7924   */\n      add\n        /* \"#utility.yul\":7899:7933   */\n      mstore\n        /* \"#utility.yul\":7942:8021   */\n      tag_259\n        /* \"#utility.yul\":8014:8020   */\n      dup2\n        /* \"#utility.yul\":8009:8011   */\n      0x40\n        /* \"#utility.yul\":7998:8007   */\n      dup6\n        /* \"#utility.yul\":7994:8012   */\n      add\n        /* \"#utility.yul\":7989:7991   */\n      0x20\n        /* \"#utility.yul\":7981:7987   */\n      dup8\n        /* \"#utility.yul\":7977:7992   */\n      add\n        /* \"#utility.yul\":7942:8021   */\n      tag_215\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8082:8084   */\n      0x1f\n        /* \"#utility.yul\":8061:8076   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":8057:8086   */\n      and\n        /* \"#utility.yul\":8042:8087   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":8089:8091   */\n      0x40\n        /* \"#utility.yul\":8038:8092   */\n      add\n      swap3\n        /* \"#utility.yul\":7702:8098   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa2646970667358221220bcfac9a2f873366c36f2b91f3bf1a0987d369eab1202f288db73c1d0d13f58dc64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1304": {
									"entryPoint": null,
									"id": 1304,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_646": {
									"entryPoint": 34,
									"id": 646,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:608:11",
										"nodeType": "YulBlock",
										"src": "0:608:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "188:229:11",
													"nodeType": "YulBlock",
													"src": "188:229:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "205:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "216:2:11",
																		"nodeType": "YulLiteral",
																		"src": "216:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "198:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:11"
																},
																"nativeSrc": "198:21:11",
																"nodeType": "YulFunctionCall",
																"src": "198:21:11"
															},
															"nativeSrc": "198:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "198:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "239:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "250:2:11",
																				"nodeType": "YulLiteral",
																				"src": "250:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "235:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:11"
																		},
																		"nativeSrc": "235:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "255:2:11",
																		"nodeType": "YulLiteral",
																		"src": "255:2:11",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "228:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:11"
																},
																"nativeSrc": "228:30:11",
																"nodeType": "YulFunctionCall",
																"src": "228:30:11"
															},
															"nativeSrc": "228:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "228:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "278:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "289:2:11",
																				"nodeType": "YulLiteral",
																				"src": "289:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "274:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:11"
																		},
																		"nativeSrc": "274:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:11"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469",
																		"kind": "string",
																		"nativeSrc": "294:34:11",
																		"nodeType": "YulLiteral",
																		"src": "294:34:11",
																		"type": "",
																		"value": "Initializable: contract is initi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "267:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:11"
																},
																"nativeSrc": "267:62:11",
																"nodeType": "YulFunctionCall",
																"src": "267:62:11"
															},
															"nativeSrc": "267:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "267:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "349:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "349:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "360:2:11",
																				"nodeType": "YulLiteral",
																				"src": "360:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "345:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:11"
																		},
																		"nativeSrc": "345:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "345:18:11"
																	},
																	{
																		"hexValue": "616c697a696e67",
																		"kind": "string",
																		"nativeSrc": "365:9:11",
																		"nodeType": "YulLiteral",
																		"src": "365:9:11",
																		"type": "",
																		"value": "alizing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "338:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "338:6:11"
																},
																"nativeSrc": "338:37:11",
																"nodeType": "YulFunctionCall",
																"src": "338:37:11"
															},
															"nativeSrc": "338:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "338:37:11"
														},
														{
															"nativeSrc": "384:27:11",
															"nodeType": "YulAssignment",
															"src": "384:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "396:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "396:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "407:3:11",
																		"nodeType": "YulLiteral",
																		"src": "407:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "392:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "392:3:11"
																},
																"nativeSrc": "392:19:11",
																"nodeType": "YulFunctionCall",
																"src": "392:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "384:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "384:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:403:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "165:9:11",
														"nodeType": "YulTypedName",
														"src": "165:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "179:4:11",
														"nodeType": "YulTypedName",
														"src": "179:4:11",
														"type": ""
													}
												],
												"src": "14:403:11"
											},
											{
												"body": {
													"nativeSrc": "519:87:11",
													"nodeType": "YulBlock",
													"src": "519:87:11",
													"statements": [
														{
															"nativeSrc": "529:26:11",
															"nodeType": "YulAssignment",
															"src": "529:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "541:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "541:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "552:2:11",
																		"nodeType": "YulLiteral",
																		"src": "552:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "537:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "537:3:11"
																},
																"nativeSrc": "537:18:11",
																"nodeType": "YulFunctionCall",
																"src": "537:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "529:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "529:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "571:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "571:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "586:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "586:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "594:4:11",
																				"nodeType": "YulLiteral",
																				"src": "594:4:11",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "582:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:11"
																		},
																		"nativeSrc": "582:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "582:17:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "564:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:11"
																},
																"nativeSrc": "564:36:11",
																"nodeType": "YulFunctionCall",
																"src": "564:36:11"
															},
															"nativeSrc": "564:36:11",
															"nodeType": "YulExpressionStatement",
															"src": "564:36:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "422:184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "488:9:11",
														"nodeType": "YulTypedName",
														"src": "488:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "499:6:11",
														"nodeType": "YulTypedName",
														"src": "499:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "510:4:11",
														"nodeType": "YulTypedName",
														"src": "510:4:11",
														"type": ""
													}
												],
												"src": "422:184:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051610dcb6101186000396000818161018f015281816101d80152818161028e015281816102ce01526103610152610dcb6000f3fe6080604052600436106100865760003560e01c806352d1902d1161005957806352d1902d146100fe578063715018a6146101135780638129fc1c146101285780638da5cb5b1461013d578063f2fde38b1461016557600080fd5b806306661abd1461008b5780633659cfe6146100b4578063371303c0146100d65780634f1ef286146100eb575b600080fd5b34801561009757600080fd5b506100a160c95481565b6040519081526020015b60405180910390f35b3480156100c057600080fd5b506100d46100cf366004610ac5565b610185565b005b3480156100e257600080fd5b506100d461026d565b6100d46100f9366004610af6565b610284565b34801561010a57600080fd5b506100a1610354565b34801561011f57600080fd5b506100d4610407565b34801561013457600080fd5b506100d461041b565b34801561014957600080fd5b506033546040516001600160a01b0390911681526020016100ab565b34801561017157600080fd5b506100d4610180366004610ac5565b610533565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036101d65760405162461bcd60e51b81526004016101cd90610bb8565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661021f600080516020610d4f833981519152546001600160a01b031690565b6001600160a01b0316146102455760405162461bcd60e51b81526004016101cd90610c04565b61024e816105a9565b6040805160008082526020820190925261026a918391906105b1565b50565b60c9805490600061027d83610c50565b9190505550565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036102cc5760405162461bcd60e51b81526004016101cd90610bb8565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610315600080516020610d4f833981519152546001600160a01b031690565b6001600160a01b03161461033b5760405162461bcd60e51b81526004016101cd90610c04565b610344826105a9565b610350828260016105b1565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103f45760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016101cd565b50600080516020610d4f83398151915290565b61040f610721565b610419600061077b565b565b600054610100900460ff161580801561043b5750600054600160ff909116105b806104555750303b158015610455575060005460ff166001145b6104b85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101cd565b6000805460ff1916600117905580156104db576000805461ff0019166101001790555b6104e36107cd565b6104eb6107fc565b801561026a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b61053b610721565b6001600160a01b0381166105a05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101cd565b61026a8161077b565b61026a610721565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156105e9576105e483610823565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610643575060408051601f3d908101601f1916820190925261064091810190610c77565b60015b6106a65760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016101cd565b600080516020610d4f83398151915281146107155760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016101cd565b506105e48383836108bf565b6033546001600160a01b031633146104195760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101cd565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166107f45760405162461bcd60e51b81526004016101cd90610c90565b6104196108ea565b600054610100900460ff166104195760405162461bcd60e51b81526004016101cd90610c90565b6001600160a01b0381163b6108905760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101cd565b600080516020610d4f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6108c88361091a565b6000825111806108d55750805b156105e4576108e4838361095a565b50505050565b600054610100900460ff166109115760405162461bcd60e51b81526004016101cd90610c90565b6104193361077b565b61092381610823565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061097f8383604051806060016040528060278152602001610d6f60279139610986565b9392505050565b6060600080856001600160a01b0316856040516109a39190610cff565b600060405180830381855af49150503d80600081146109de576040519150601f19603f3d011682016040523d82523d6000602084013e6109e3565b606091505b50915091506109f4868383876109fe565b9695505050505050565b60608315610a6d578251600003610a66576001600160a01b0385163b610a665760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101cd565b5081610a77565b610a778383610a7f565b949350505050565b815115610a8f5781518083602001fd5b8060405162461bcd60e51b81526004016101cd9190610d1b565b80356001600160a01b0381168114610ac057600080fd5b919050565b600060208284031215610ad757600080fd5b61097f82610aa9565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610b0957600080fd5b610b1283610aa9565b9150602083013567ffffffffffffffff80821115610b2f57600080fd5b818501915085601f830112610b4357600080fd5b813581811115610b5557610b55610ae0565b604051601f8201601f19908116603f01168101908382118183101715610b7d57610b7d610ae0565b81604052828152886020848701011115610b9657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060018201610c7057634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610c8957600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015610cf6578181015183820152602001610cde565b50506000910152565b60008251610d11818460208701610cdb565b9190910192915050565b6020815260008251806020840152610d3a816040850160208701610cdb565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220bcfac9a2f873366c36f2b91f3bf1a0987d369eab1202f288db73c1d0d13f58dc64736f6c63430008150033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D PUSH2 0x22 JUMP JUMPDEST PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND EQ PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xDCB PUSH2 0x118 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x18F ADD MSTORE DUP2 DUP2 PUSH2 0x1D8 ADD MSTORE DUP2 DUP2 PUSH2 0x28E ADD MSTORE DUP2 DUP2 PUSH2 0x2CE ADD MSTORE PUSH2 0x361 ADD MSTORE PUSH2 0xDCB PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x371303C0 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH1 0xC9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0x185 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x26D JUMP JUMPDEST PUSH2 0xD4 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0x284 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x354 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x407 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x41B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x1D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD4F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x26A SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x5B1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x27D DUP4 PUSH2 0xC50 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x2CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0xBB8 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x315 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD4F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x344 DUP3 PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x350 DUP3 DUP3 PUSH1 0x1 PUSH2 0x5B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD4F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x40F PUSH2 0x721 JUMP JUMPDEST PUSH2 0x419 PUSH1 0x0 PUSH2 0x77B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x43B JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x455 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x455 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x4E3 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x4EB PUSH2 0x7FC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x53B PUSH2 0x721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x26A DUP2 PUSH2 0x77B JUMP JUMPDEST PUSH2 0x26A PUSH2 0x721 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5E9 JUMPI PUSH2 0x5E4 DUP4 PUSH2 0x823 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x643 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x640 SWAP2 DUP2 ADD SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD4F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST POP PUSH2 0x5E4 DUP4 DUP4 DUP4 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x419 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0xC90 JUMP JUMPDEST PUSH2 0x419 PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x419 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0xC90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x890 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD4F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x8C8 DUP4 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x8D5 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x5E4 JUMPI PUSH2 0x8E4 DUP4 DUP4 PUSH2 0x95A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0xC90 JUMP JUMPDEST PUSH2 0x419 CALLER PUSH2 0x77B JUMP JUMPDEST PUSH2 0x923 DUP2 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x97F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6F PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x986 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9DE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x9F4 DUP7 DUP4 DUP4 DUP8 PUSH2 0x9FE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xA6D JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0xA66 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CD JUMP JUMPDEST POP DUP2 PUSH2 0xA77 JUMP JUMPDEST PUSH2 0xA77 DUP4 DUP4 PUSH2 0xA7F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xA8F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0xD1B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97F DUP3 PUSH2 0xAA9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB12 DUP4 PUSH2 0xAA9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB55 JUMPI PUSH2 0xB55 PUSH2 0xAE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xB7D JUMPI PUSH2 0xB7D PUSH2 0xAE0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xB96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xC70 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCF6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCDE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xD11 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xCDB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xD3A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A2646970667358221220BC STATICCALL 0xC9 LOG2 0xF8 PUSH20 0x366C36F2B91F3BF1A0987D369EAB1202F288DB73 0xC1 0xD0 0xD1 EXTCODEHASH PC 0xDC PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "288:512:10:-:0;;;1332:4:6;1289:48;;445:53:10;;;;;;;;;-1:-1:-1;469:22:10;:20;:22::i;:::-;288:512;;5939:280:5;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:5;;216:2:11;5998:66:5;;;198:21:11;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:11;;;338:37;392:19;;5998:66:5;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:5;6140:15;6125:30;;;;;;6174:28;;564:36:11;;;6174:28:5;;552:2:11;537:18;6174:28:5;;;;;;;6074:139;5939:280::o;422:184:11:-;288:512:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_26": {
									"entryPoint": 1997,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_37": {
									"entryPoint": 2282,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_683": {
									"entryPoint": 2044,
									"id": 683,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_1325": {
									"entryPoint": 1449,
									"id": 1325,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOwner_68": {
									"entryPoint": 1825,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getImplementation_207": {
									"entryPoint": null,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1158": {
									"entryPoint": null,
									"id": 1158,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1130": {
									"entryPoint": 2687,
									"id": 1130,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_231": {
									"entryPoint": 2083,
									"id": 231,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_125": {
									"entryPoint": 1915,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_329": {
									"entryPoint": 1457,
									"id": 329,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_276": {
									"entryPoint": 2239,
									"id": 276,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeTo_246": {
									"entryPoint": 2330,
									"id": 246,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@count_1297": {
									"entryPoint": null,
									"id": 1297,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1018": {
									"entryPoint": 2394,
									"id": 1018,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_1047": {
									"entryPoint": 2438,
									"id": 1047,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_1205": {
									"entryPoint": null,
									"id": 1205,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBooleanSlot_1216": {
									"entryPoint": null,
									"id": 1216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@inc_1332": {
									"entryPoint": 621,
									"id": 1332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_1316": {
									"entryPoint": 1051,
									"id": 1316,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_746": {
									"entryPoint": 852,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_82": {
									"entryPoint": 1031,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_105": {
									"entryPoint": 1331,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_789": {
									"entryPoint": 644,
									"id": 789,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeTo_768": {
									"entryPoint": 389,
									"id": 768,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1086": {
									"entryPoint": 2558,
									"id": 1086,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 2806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 3191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3291,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 3152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2784,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8100:11",
										"nodeType": "YulBlock",
										"src": "0:8100:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:11",
													"nodeType": "YulBlock",
													"src": "115:76:11",
													"statements": [
														{
															"nativeSrc": "125:26:11",
															"nodeType": "YulAssignment",
															"src": "125:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:11",
																		"nodeType": "YulLiteral",
																		"src": "148:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:11"
																},
																"nativeSrc": "133:18:11",
																"nodeType": "YulFunctionCall",
																"src": "133:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:11"
																},
																"nativeSrc": "160:25:11",
																"nodeType": "YulFunctionCall",
																"src": "160:25:11"
															},
															"nativeSrc": "160:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:11",
														"nodeType": "YulTypedName",
														"src": "84:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:11",
														"nodeType": "YulTypedName",
														"src": "95:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:11",
														"nodeType": "YulTypedName",
														"src": "106:4:11",
														"type": ""
													}
												],
												"src": "14:177:11"
											},
											{
												"body": {
													"nativeSrc": "245:124:11",
													"nodeType": "YulBlock",
													"src": "245:124:11",
													"statements": [
														{
															"nativeSrc": "255:29:11",
															"nodeType": "YulAssignment",
															"src": "255:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "277:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "277:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "264:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "264:12:11"
																},
																"nativeSrc": "264:20:11",
																"nodeType": "YulFunctionCall",
																"src": "264:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "255:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "255:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "347:16:11",
																"nodeType": "YulBlock",
																"src": "347:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "356:1:11",
																					"nodeType": "YulLiteral",
																					"src": "356:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "359:1:11",
																					"nodeType": "YulLiteral",
																					"src": "359:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "349:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "349:6:11"
																			},
																			"nativeSrc": "349:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "349:12:11"
																		},
																		"nativeSrc": "349:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "349:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "306:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "306:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "317:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "317:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "332:3:11",
																										"nodeType": "YulLiteral",
																										"src": "332:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "337:1:11",
																										"nodeType": "YulLiteral",
																										"src": "337:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "328:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "328:3:11"
																								},
																								"nativeSrc": "328:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "328:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "341:1:11",
																								"nodeType": "YulLiteral",
																								"src": "341:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "324:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "324:3:11"
																						},
																						"nativeSrc": "324:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "324:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "313:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "313:3:11"
																				},
																				"nativeSrc": "313:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "313:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "303:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "303:2:11"
																		},
																		"nativeSrc": "303:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "303:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "296:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:11"
																},
																"nativeSrc": "296:50:11",
																"nodeType": "YulFunctionCall",
																"src": "296:50:11"
															},
															"nativeSrc": "293:70:11",
															"nodeType": "YulIf",
															"src": "293:70:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "196:173:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "224:6:11",
														"nodeType": "YulTypedName",
														"src": "224:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "235:5:11",
														"nodeType": "YulTypedName",
														"src": "235:5:11",
														"type": ""
													}
												],
												"src": "196:173:11"
											},
											{
												"body": {
													"nativeSrc": "444:116:11",
													"nodeType": "YulBlock",
													"src": "444:116:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "490:16:11",
																"nodeType": "YulBlock",
																"src": "490:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "499:1:11",
																					"nodeType": "YulLiteral",
																					"src": "499:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:11",
																					"nodeType": "YulLiteral",
																					"src": "502:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "492:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "492:6:11"
																			},
																			"nativeSrc": "492:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "492:12:11"
																		},
																		"nativeSrc": "492:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "492:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "465:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "465:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "474:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "474:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "461:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "461:3:11"
																		},
																		"nativeSrc": "461:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "461:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "486:2:11",
																		"nodeType": "YulLiteral",
																		"src": "486:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "457:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "457:3:11"
																},
																"nativeSrc": "457:32:11",
																"nodeType": "YulFunctionCall",
																"src": "457:32:11"
															},
															"nativeSrc": "454:52:11",
															"nodeType": "YulIf",
															"src": "454:52:11"
														},
														{
															"nativeSrc": "515:39:11",
															"nodeType": "YulAssignment",
															"src": "515:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "544:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "544:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "525:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "525:18:11"
																},
																"nativeSrc": "525:29:11",
																"nodeType": "YulFunctionCall",
																"src": "525:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "515:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "374:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "410:9:11",
														"nodeType": "YulTypedName",
														"src": "410:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "421:7:11",
														"nodeType": "YulTypedName",
														"src": "421:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "433:6:11",
														"nodeType": "YulTypedName",
														"src": "433:6:11",
														"type": ""
													}
												],
												"src": "374:186:11"
											},
											{
												"body": {
													"nativeSrc": "597:95:11",
													"nodeType": "YulBlock",
													"src": "597:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "614:1:11",
																		"nodeType": "YulLiteral",
																		"src": "614:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "621:3:11",
																				"nodeType": "YulLiteral",
																				"src": "621:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "626:10:11",
																				"nodeType": "YulLiteral",
																				"src": "626:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "617:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "617:3:11"
																		},
																		"nativeSrc": "617:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "617:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "607:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "607:6:11"
																},
																"nativeSrc": "607:31:11",
																"nodeType": "YulFunctionCall",
																"src": "607:31:11"
															},
															"nativeSrc": "607:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "607:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "654:1:11",
																		"nodeType": "YulLiteral",
																		"src": "654:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "657:4:11",
																		"nodeType": "YulLiteral",
																		"src": "657:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "647:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "647:6:11"
																},
																"nativeSrc": "647:15:11",
																"nodeType": "YulFunctionCall",
																"src": "647:15:11"
															},
															"nativeSrc": "647:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "647:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "678:1:11",
																		"nodeType": "YulLiteral",
																		"src": "678:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "681:4:11",
																		"nodeType": "YulLiteral",
																		"src": "681:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "671:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "671:6:11"
																},
																"nativeSrc": "671:15:11",
																"nodeType": "YulFunctionCall",
																"src": "671:15:11"
															},
															"nativeSrc": "671:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "671:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "565:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "565:127:11"
											},
											{
												"body": {
													"nativeSrc": "793:899:11",
													"nodeType": "YulBlock",
													"src": "793:899:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "839:16:11",
																"nodeType": "YulBlock",
																"src": "839:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "848:1:11",
																					"nodeType": "YulLiteral",
																					"src": "848:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "851:1:11",
																					"nodeType": "YulLiteral",
																					"src": "851:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "841:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:11"
																			},
																			"nativeSrc": "841:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "841:12:11"
																		},
																		"nativeSrc": "841:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "841:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "814:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "814:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "823:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "823:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "810:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "810:3:11"
																		},
																		"nativeSrc": "810:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "810:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "835:2:11",
																		"nodeType": "YulLiteral",
																		"src": "835:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "806:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "806:3:11"
																},
																"nativeSrc": "806:32:11",
																"nodeType": "YulFunctionCall",
																"src": "806:32:11"
															},
															"nativeSrc": "803:52:11",
															"nodeType": "YulIf",
															"src": "803:52:11"
														},
														{
															"nativeSrc": "864:39:11",
															"nodeType": "YulAssignment",
															"src": "864:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "893:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "893:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "874:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "874:18:11"
																},
																"nativeSrc": "874:29:11",
																"nodeType": "YulFunctionCall",
																"src": "874:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "864:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "864:6:11"
																}
															]
														},
														{
															"nativeSrc": "912:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "912:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "943:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "943:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "954:2:11",
																				"nodeType": "YulLiteral",
																				"src": "954:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "939:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:11"
																		},
																		"nativeSrc": "939:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "939:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "926:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "926:12:11"
																},
																"nativeSrc": "926:32:11",
																"nodeType": "YulFunctionCall",
																"src": "926:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "916:6:11",
																	"nodeType": "YulTypedName",
																	"src": "916:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "967:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "967:28:11",
															"value": {
																"kind": "number",
																"nativeSrc": "977:18:11",
																"nodeType": "YulLiteral",
																"src": "977:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "971:2:11",
																	"nodeType": "YulTypedName",
																	"src": "971:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1022:16:11",
																"nodeType": "YulBlock",
																"src": "1022:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1031:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1031:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1034:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1034:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1024:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1024:6:11"
																			},
																			"nativeSrc": "1024:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1024:12:11"
																		},
																		"nativeSrc": "1024:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1024:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1010:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1010:6:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1018:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1018:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1007:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1007:2:11"
																},
																"nativeSrc": "1007:14:11",
																"nodeType": "YulFunctionCall",
																"src": "1007:14:11"
															},
															"nativeSrc": "1004:34:11",
															"nodeType": "YulIf",
															"src": "1004:34:11"
														},
														{
															"nativeSrc": "1047:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1047:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1061:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1061:9:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1072:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1072:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1057:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:11"
																},
																"nativeSrc": "1057:22:11",
																"nodeType": "YulFunctionCall",
																"src": "1057:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "1051:2:11",
																	"nodeType": "YulTypedName",
																	"src": "1051:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1127:16:11",
																"nodeType": "YulBlock",
																"src": "1127:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1136:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1136:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1139:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1139:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1129:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1129:6:11"
																			},
																			"nativeSrc": "1129:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1129:12:11"
																		},
																		"nativeSrc": "1129:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1129:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1106:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "1106:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1110:4:11",
																						"nodeType": "YulLiteral",
																						"src": "1110:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1102:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1102:3:11"
																				},
																				"nativeSrc": "1102:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1102:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1117:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1117:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1098:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1098:3:11"
																		},
																		"nativeSrc": "1098:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1098:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1091:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1091:6:11"
																},
																"nativeSrc": "1091:35:11",
																"nodeType": "YulFunctionCall",
																"src": "1091:35:11"
															},
															"nativeSrc": "1088:55:11",
															"nodeType": "YulIf",
															"src": "1088:55:11"
														},
														{
															"nativeSrc": "1152:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1152:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "1175:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1175:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1162:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1162:12:11"
																},
																"nativeSrc": "1162:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1162:16:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "1156:2:11",
																	"nodeType": "YulTypedName",
																	"src": "1156:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1201:22:11",
																"nodeType": "YulBlock",
																"src": "1201:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1203:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1203:16:11"
																			},
																			"nativeSrc": "1203:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1203:18:11"
																		},
																		"nativeSrc": "1203:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1203:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "1193:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1193:2:11"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1197:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1197:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1190:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1190:2:11"
																},
																"nativeSrc": "1190:10:11",
																"nodeType": "YulFunctionCall",
																"src": "1190:10:11"
															},
															"nativeSrc": "1187:36:11",
															"nodeType": "YulIf",
															"src": "1187:36:11"
														},
														{
															"nativeSrc": "1232:17:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1232:17:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "1242:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1242:3:11"
																},
																"nativeSrc": "1242:7:11",
																"nodeType": "YulFunctionCall",
																"src": "1242:7:11"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "1236:2:11",
																	"nodeType": "YulTypedName",
																	"src": "1236:2:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1258:23:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1258:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1278:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1278:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1272:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1272:5:11"
																},
																"nativeSrc": "1272:9:11",
																"nodeType": "YulFunctionCall",
																"src": "1272:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1262:6:11",
																	"nodeType": "YulTypedName",
																	"src": "1262:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1290:71:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1290:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1312:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1312:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "1336:2:11",
																										"nodeType": "YulIdentifier",
																										"src": "1336:2:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1340:4:11",
																										"nodeType": "YulLiteral",
																										"src": "1340:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1332:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "1332:3:11"
																								},
																								"nativeSrc": "1332:13:11",
																								"nodeType": "YulFunctionCall",
																								"src": "1332:13:11"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "1347:2:11",
																								"nodeType": "YulIdentifier",
																								"src": "1347:2:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "1328:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1328:3:11"
																						},
																						"nativeSrc": "1328:22:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1328:22:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1352:2:11",
																						"nodeType": "YulLiteral",
																						"src": "1352:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1324:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1324:3:11"
																				},
																				"nativeSrc": "1324:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1324:31:11"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "1357:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "1357:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1320:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:11"
																		},
																		"nativeSrc": "1320:40:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1320:40:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1308:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1308:3:11"
																},
																"nativeSrc": "1308:53:11",
																"nodeType": "YulFunctionCall",
																"src": "1308:53:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1294:10:11",
																	"nodeType": "YulTypedName",
																	"src": "1294:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1420:22:11",
																"nodeType": "YulBlock",
																"src": "1420:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1422:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1422:16:11"
																			},
																			"nativeSrc": "1422:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1422:18:11"
																		},
																		"nativeSrc": "1422:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1422:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1379:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1379:10:11"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1391:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "1391:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1376:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1376:2:11"
																		},
																		"nativeSrc": "1376:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1376:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1399:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1399:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1411:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1411:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1396:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1396:2:11"
																		},
																		"nativeSrc": "1396:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1396:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1373:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1373:2:11"
																},
																"nativeSrc": "1373:46:11",
																"nodeType": "YulFunctionCall",
																"src": "1373:46:11"
															},
															"nativeSrc": "1370:72:11",
															"nodeType": "YulIf",
															"src": "1370:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1458:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1458:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1462:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "1462:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1451:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:11"
																},
																"nativeSrc": "1451:22:11",
																"nodeType": "YulFunctionCall",
																"src": "1451:22:11"
															},
															"nativeSrc": "1451:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "1451:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1489:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1489:6:11"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1497:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1497:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1482:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1482:6:11"
																},
																"nativeSrc": "1482:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1482:18:11"
															},
															"nativeSrc": "1482:18:11",
															"nodeType": "YulExpressionStatement",
															"src": "1482:18:11"
														},
														{
															"body": {
																"nativeSrc": "1546:16:11",
																"nodeType": "YulBlock",
																"src": "1546:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1555:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1555:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1558:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1558:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1548:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1548:6:11"
																			},
																			"nativeSrc": "1548:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1548:12:11"
																		},
																		"nativeSrc": "1548:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1548:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1523:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "1523:2:11"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1527:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "1527:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1519:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1519:3:11"
																				},
																				"nativeSrc": "1519:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1519:11:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1532:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1532:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1515:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1515:3:11"
																		},
																		"nativeSrc": "1515:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1515:20:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1537:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "1537:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1512:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1512:2:11"
																},
																"nativeSrc": "1512:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1512:33:11"
															},
															"nativeSrc": "1509:53:11",
															"nodeType": "YulIf",
															"src": "1509:53:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1588:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1588:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1596:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1596:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1584:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1584:3:11"
																		},
																		"nativeSrc": "1584:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1584:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "1605:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "1605:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1609:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1609:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1601:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1601:3:11"
																		},
																		"nativeSrc": "1601:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:11:11"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1614:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "1614:2:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1571:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1571:12:11"
																},
																"nativeSrc": "1571:46:11",
																"nodeType": "YulFunctionCall",
																"src": "1571:46:11"
															},
															"nativeSrc": "1571:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "1571:46:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1641:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1641:6:11"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1649:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "1649:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1637:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1637:3:11"
																				},
																				"nativeSrc": "1637:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1637:15:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1654:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1654:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1633:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1633:3:11"
																		},
																		"nativeSrc": "1633:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1633:24:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1626:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1626:6:11"
																},
																"nativeSrc": "1626:35:11",
																"nodeType": "YulFunctionCall",
																"src": "1626:35:11"
															},
															"nativeSrc": "1626:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "1626:35:11"
														},
														{
															"nativeSrc": "1670:16:11",
															"nodeType": "YulAssignment",
															"src": "1670:16:11",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1680:6:11",
																"nodeType": "YulIdentifier",
																"src": "1680:6:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1670:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1670:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "697:995:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "751:9:11",
														"nodeType": "YulTypedName",
														"src": "751:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "762:7:11",
														"nodeType": "YulTypedName",
														"src": "762:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "774:6:11",
														"nodeType": "YulTypedName",
														"src": "774:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "782:6:11",
														"nodeType": "YulTypedName",
														"src": "782:6:11",
														"type": ""
													}
												],
												"src": "697:995:11"
											},
											{
												"body": {
													"nativeSrc": "1798:76:11",
													"nodeType": "YulBlock",
													"src": "1798:76:11",
													"statements": [
														{
															"nativeSrc": "1808:26:11",
															"nodeType": "YulAssignment",
															"src": "1808:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1820:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1820:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1831:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1831:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1816:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1816:3:11"
																},
																"nativeSrc": "1816:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1816:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1808:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1808:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1850:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1850:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1861:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1861:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1843:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:11"
																},
																"nativeSrc": "1843:25:11",
																"nodeType": "YulFunctionCall",
																"src": "1843:25:11"
															},
															"nativeSrc": "1843:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "1843:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1697:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1767:9:11",
														"nodeType": "YulTypedName",
														"src": "1767:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1778:6:11",
														"nodeType": "YulTypedName",
														"src": "1778:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1789:4:11",
														"nodeType": "YulTypedName",
														"src": "1789:4:11",
														"type": ""
													}
												],
												"src": "1697:177:11"
											},
											{
												"body": {
													"nativeSrc": "1980:102:11",
													"nodeType": "YulBlock",
													"src": "1980:102:11",
													"statements": [
														{
															"nativeSrc": "1990:26:11",
															"nodeType": "YulAssignment",
															"src": "1990:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2002:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2002:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2013:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2013:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1998:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1998:3:11"
																},
																"nativeSrc": "1998:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1998:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1990:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1990:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2047:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2047:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2063:3:11",
																								"nodeType": "YulLiteral",
																								"src": "2063:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2068:1:11",
																								"nodeType": "YulLiteral",
																								"src": "2068:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2059:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "2059:3:11"
																						},
																						"nativeSrc": "2059:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "2059:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2072:1:11",
																						"nodeType": "YulLiteral",
																						"src": "2072:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2055:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2055:3:11"
																				},
																				"nativeSrc": "2055:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2055:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2043:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2043:3:11"
																		},
																		"nativeSrc": "2043:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2043:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2025:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2025:6:11"
																},
																"nativeSrc": "2025:51:11",
																"nodeType": "YulFunctionCall",
																"src": "2025:51:11"
															},
															"nativeSrc": "2025:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "2025:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1879:203:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1949:9:11",
														"nodeType": "YulTypedName",
														"src": "1949:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1960:6:11",
														"nodeType": "YulTypedName",
														"src": "1960:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1971:4:11",
														"nodeType": "YulTypedName",
														"src": "1971:4:11",
														"type": ""
													}
												],
												"src": "1879:203:11"
											},
											{
												"body": {
													"nativeSrc": "2261:234:11",
													"nodeType": "YulBlock",
													"src": "2261:234:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2278:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2289:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2289:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2271:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2271:6:11"
																},
																"nativeSrc": "2271:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2271:21:11"
															},
															"nativeSrc": "2271:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "2271:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2312:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2312:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2323:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2323:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2308:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2308:3:11"
																		},
																		"nativeSrc": "2308:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2308:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2328:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2328:2:11",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2301:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2301:6:11"
																},
																"nativeSrc": "2301:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2301:30:11"
															},
															"nativeSrc": "2301:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "2301:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2351:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2351:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2362:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2362:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2347:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2347:3:11"
																		},
																		"nativeSrc": "2347:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2347:18:11"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nativeSrc": "2367:34:11",
																		"nodeType": "YulLiteral",
																		"src": "2367:34:11",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2340:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2340:6:11"
																},
																"nativeSrc": "2340:62:11",
																"nodeType": "YulFunctionCall",
																"src": "2340:62:11"
															},
															"nativeSrc": "2340:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "2340:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2422:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2422:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2433:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2433:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2418:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2418:3:11"
																		},
																		"nativeSrc": "2418:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2418:18:11"
																	},
																	{
																		"hexValue": "64656c656761746563616c6c",
																		"kind": "string",
																		"nativeSrc": "2438:14:11",
																		"nodeType": "YulLiteral",
																		"src": "2438:14:11",
																		"type": "",
																		"value": "delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2411:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2411:6:11"
																},
																"nativeSrc": "2411:42:11",
																"nodeType": "YulFunctionCall",
																"src": "2411:42:11"
															},
															"nativeSrc": "2411:42:11",
															"nodeType": "YulExpressionStatement",
															"src": "2411:42:11"
														},
														{
															"nativeSrc": "2462:27:11",
															"nodeType": "YulAssignment",
															"src": "2462:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2474:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2474:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2485:3:11",
																		"nodeType": "YulLiteral",
																		"src": "2485:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2470:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2470:3:11"
																},
																"nativeSrc": "2470:19:11",
																"nodeType": "YulFunctionCall",
																"src": "2470:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2462:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2462:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2087:408:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2238:9:11",
														"nodeType": "YulTypedName",
														"src": "2238:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2252:4:11",
														"nodeType": "YulTypedName",
														"src": "2252:4:11",
														"type": ""
													}
												],
												"src": "2087:408:11"
											},
											{
												"body": {
													"nativeSrc": "2674:234:11",
													"nodeType": "YulBlock",
													"src": "2674:234:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2691:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2691:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2702:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2702:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2684:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2684:6:11"
																},
																"nativeSrc": "2684:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2684:21:11"
															},
															"nativeSrc": "2684:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "2684:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2725:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2725:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2736:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2736:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2721:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2721:3:11"
																		},
																		"nativeSrc": "2721:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2721:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2741:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2741:2:11",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2714:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2714:6:11"
																},
																"nativeSrc": "2714:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2714:30:11"
															},
															"nativeSrc": "2714:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "2714:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2764:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2775:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2775:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2760:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:11"
																		},
																		"nativeSrc": "2760:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2760:18:11"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nativeSrc": "2780:34:11",
																		"nodeType": "YulLiteral",
																		"src": "2780:34:11",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2753:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:11"
																},
																"nativeSrc": "2753:62:11",
																"nodeType": "YulFunctionCall",
																"src": "2753:62:11"
															},
															"nativeSrc": "2753:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "2753:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2835:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2835:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2846:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2846:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2831:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2831:3:11"
																		},
																		"nativeSrc": "2831:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2831:18:11"
																	},
																	{
																		"hexValue": "6163746976652070726f7879",
																		"kind": "string",
																		"nativeSrc": "2851:14:11",
																		"nodeType": "YulLiteral",
																		"src": "2851:14:11",
																		"type": "",
																		"value": "active proxy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2824:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2824:6:11"
																},
																"nativeSrc": "2824:42:11",
																"nodeType": "YulFunctionCall",
																"src": "2824:42:11"
															},
															"nativeSrc": "2824:42:11",
															"nodeType": "YulExpressionStatement",
															"src": "2824:42:11"
														},
														{
															"nativeSrc": "2875:27:11",
															"nodeType": "YulAssignment",
															"src": "2875:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2887:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2887:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2898:3:11",
																		"nodeType": "YulLiteral",
																		"src": "2898:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2883:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:11"
																},
																"nativeSrc": "2883:19:11",
																"nodeType": "YulFunctionCall",
																"src": "2883:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2875:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2875:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2500:408:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2651:9:11",
														"nodeType": "YulTypedName",
														"src": "2651:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2665:4:11",
														"nodeType": "YulTypedName",
														"src": "2665:4:11",
														"type": ""
													}
												],
												"src": "2500:408:11"
											},
											{
												"body": {
													"nativeSrc": "2960:185:11",
													"nodeType": "YulBlock",
													"src": "2960:185:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2999:111:11",
																"nodeType": "YulBlock",
																"src": "2999:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3020:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3020:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3027:3:11",
																							"nodeType": "YulLiteral",
																							"src": "3027:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3032:10:11",
																							"nodeType": "YulLiteral",
																							"src": "3032:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3023:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "3023:3:11"
																					},
																					"nativeSrc": "3023:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3023:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3013:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3013:6:11"
																			},
																			"nativeSrc": "3013:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3013:31:11"
																		},
																		"nativeSrc": "3013:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3013:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3064:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3064:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3067:4:11",
																					"nodeType": "YulLiteral",
																					"src": "3067:4:11",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3057:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3057:6:11"
																			},
																			"nativeSrc": "3057:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3057:15:11"
																		},
																		"nativeSrc": "3057:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3057:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3092:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3092:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3095:4:11",
																					"nodeType": "YulLiteral",
																					"src": "3095:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3085:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3085:6:11"
																			},
																			"nativeSrc": "3085:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3085:15:11"
																		},
																		"nativeSrc": "3085:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3085:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2976:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2976:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2987:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2987:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2983:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2983:3:11"
																		},
																		"nativeSrc": "2983:6:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2983:6:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2973:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2973:2:11"
																},
																"nativeSrc": "2973:17:11",
																"nodeType": "YulFunctionCall",
																"src": "2973:17:11"
															},
															"nativeSrc": "2970:140:11",
															"nodeType": "YulIf",
															"src": "2970:140:11"
														},
														{
															"nativeSrc": "3119:20:11",
															"nodeType": "YulAssignment",
															"src": "3119:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3130:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3130:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3137:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3137:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3126:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3126:3:11"
																},
																"nativeSrc": "3126:13:11",
																"nodeType": "YulFunctionCall",
																"src": "3126:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3119:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3119:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "2913:232:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2942:5:11",
														"nodeType": "YulTypedName",
														"src": "2942:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2952:3:11",
														"nodeType": "YulTypedName",
														"src": "2952:3:11",
														"type": ""
													}
												],
												"src": "2913:232:11"
											},
											{
												"body": {
													"nativeSrc": "3324:246:11",
													"nodeType": "YulBlock",
													"src": "3324:246:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3341:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3341:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3352:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3352:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3334:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3334:6:11"
																},
																"nativeSrc": "3334:21:11",
																"nodeType": "YulFunctionCall",
																"src": "3334:21:11"
															},
															"nativeSrc": "3334:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "3334:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3375:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3375:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3386:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3386:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3371:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3371:3:11"
																		},
																		"nativeSrc": "3371:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3371:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3391:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3391:2:11",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3364:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3364:6:11"
																},
																"nativeSrc": "3364:30:11",
																"nodeType": "YulFunctionCall",
																"src": "3364:30:11"
															},
															"nativeSrc": "3364:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "3364:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3414:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3414:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3425:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3425:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3410:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3410:3:11"
																		},
																		"nativeSrc": "3410:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3410:18:11"
																	},
																	{
																		"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c",
																		"kind": "string",
																		"nativeSrc": "3430:34:11",
																		"nodeType": "YulLiteral",
																		"src": "3430:34:11",
																		"type": "",
																		"value": "UUPSUpgradeable: must not be cal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3403:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:11"
																},
																"nativeSrc": "3403:62:11",
																"nodeType": "YulFunctionCall",
																"src": "3403:62:11"
															},
															"nativeSrc": "3403:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "3403:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3485:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3485:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3496:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3496:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3481:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3481:3:11"
																		},
																		"nativeSrc": "3481:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3481:18:11"
																	},
																	{
																		"hexValue": "6c6564207468726f7567682064656c656761746563616c6c",
																		"kind": "string",
																		"nativeSrc": "3501:26:11",
																		"nodeType": "YulLiteral",
																		"src": "3501:26:11",
																		"type": "",
																		"value": "led through delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3474:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3474:6:11"
																},
																"nativeSrc": "3474:54:11",
																"nodeType": "YulFunctionCall",
																"src": "3474:54:11"
															},
															"nativeSrc": "3474:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "3474:54:11"
														},
														{
															"nativeSrc": "3537:27:11",
															"nodeType": "YulAssignment",
															"src": "3537:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3549:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3549:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3560:3:11",
																		"nodeType": "YulLiteral",
																		"src": "3560:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3545:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3545:3:11"
																},
																"nativeSrc": "3545:19:11",
																"nodeType": "YulFunctionCall",
																"src": "3545:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3537:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3537:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3150:420:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3301:9:11",
														"nodeType": "YulTypedName",
														"src": "3301:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3315:4:11",
														"nodeType": "YulTypedName",
														"src": "3315:4:11",
														"type": ""
													}
												],
												"src": "3150:420:11"
											},
											{
												"body": {
													"nativeSrc": "3749:236:11",
													"nodeType": "YulBlock",
													"src": "3749:236:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3766:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3766:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3777:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3777:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3759:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:11"
																},
																"nativeSrc": "3759:21:11",
																"nodeType": "YulFunctionCall",
																"src": "3759:21:11"
															},
															"nativeSrc": "3759:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "3759:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3800:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3800:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3811:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3811:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3796:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3796:3:11"
																		},
																		"nativeSrc": "3796:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3796:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3816:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3816:2:11",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3789:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3789:6:11"
																},
																"nativeSrc": "3789:30:11",
																"nodeType": "YulFunctionCall",
																"src": "3789:30:11"
															},
															"nativeSrc": "3789:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "3789:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3839:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3839:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3850:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3850:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3835:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3835:3:11"
																		},
																		"nativeSrc": "3835:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3835:18:11"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nativeSrc": "3855:34:11",
																		"nodeType": "YulLiteral",
																		"src": "3855:34:11",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3828:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3828:6:11"
																},
																"nativeSrc": "3828:62:11",
																"nodeType": "YulFunctionCall",
																"src": "3828:62:11"
															},
															"nativeSrc": "3828:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "3828:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3910:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3910:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3921:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3921:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3906:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3906:3:11"
																		},
																		"nativeSrc": "3906:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3906:18:11"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "3926:16:11",
																		"nodeType": "YulLiteral",
																		"src": "3926:16:11",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3899:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3899:6:11"
																},
																"nativeSrc": "3899:44:11",
																"nodeType": "YulFunctionCall",
																"src": "3899:44:11"
															},
															"nativeSrc": "3899:44:11",
															"nodeType": "YulExpressionStatement",
															"src": "3899:44:11"
														},
														{
															"nativeSrc": "3952:27:11",
															"nodeType": "YulAssignment",
															"src": "3952:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3964:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3964:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3975:3:11",
																		"nodeType": "YulLiteral",
																		"src": "3975:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3960:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3960:3:11"
																},
																"nativeSrc": "3960:19:11",
																"nodeType": "YulFunctionCall",
																"src": "3960:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3952:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3952:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3575:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3726:9:11",
														"nodeType": "YulTypedName",
														"src": "3726:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3740:4:11",
														"nodeType": "YulTypedName",
														"src": "3740:4:11",
														"type": ""
													}
												],
												"src": "3575:410:11"
											},
											{
												"body": {
													"nativeSrc": "4097:87:11",
													"nodeType": "YulBlock",
													"src": "4097:87:11",
													"statements": [
														{
															"nativeSrc": "4107:26:11",
															"nodeType": "YulAssignment",
															"src": "4107:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4119:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4119:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4130:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4130:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4115:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4115:3:11"
																},
																"nativeSrc": "4115:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4115:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4107:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4107:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4149:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4149:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4164:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4164:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4172:4:11",
																				"nodeType": "YulLiteral",
																				"src": "4172:4:11",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4160:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4160:3:11"
																		},
																		"nativeSrc": "4160:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4160:17:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4142:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4142:6:11"
																},
																"nativeSrc": "4142:36:11",
																"nodeType": "YulFunctionCall",
																"src": "4142:36:11"
															},
															"nativeSrc": "4142:36:11",
															"nodeType": "YulExpressionStatement",
															"src": "4142:36:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3990:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4066:9:11",
														"nodeType": "YulTypedName",
														"src": "4066:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4077:6:11",
														"nodeType": "YulTypedName",
														"src": "4077:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4088:4:11",
														"nodeType": "YulTypedName",
														"src": "4088:4:11",
														"type": ""
													}
												],
												"src": "3990:194:11"
											},
											{
												"body": {
													"nativeSrc": "4363:228:11",
													"nodeType": "YulBlock",
													"src": "4363:228:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4380:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4380:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4391:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4373:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4373:6:11"
																},
																"nativeSrc": "4373:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4373:21:11"
															},
															"nativeSrc": "4373:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "4373:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4414:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4414:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4425:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4425:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4410:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4410:3:11"
																		},
																		"nativeSrc": "4410:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4410:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4430:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4430:2:11",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4403:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4403:6:11"
																},
																"nativeSrc": "4403:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4403:30:11"
															},
															"nativeSrc": "4403:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "4403:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4453:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4453:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4464:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4464:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4449:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4449:3:11"
																		},
																		"nativeSrc": "4449:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4449:18:11"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "4469:34:11",
																		"nodeType": "YulLiteral",
																		"src": "4469:34:11",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4442:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4442:6:11"
																},
																"nativeSrc": "4442:62:11",
																"nodeType": "YulFunctionCall",
																"src": "4442:62:11"
															},
															"nativeSrc": "4442:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "4442:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4524:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4524:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4535:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4535:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4520:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4520:3:11"
																		},
																		"nativeSrc": "4520:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4520:18:11"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "4540:8:11",
																		"nodeType": "YulLiteral",
																		"src": "4540:8:11",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4513:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4513:6:11"
																},
																"nativeSrc": "4513:36:11",
																"nodeType": "YulFunctionCall",
																"src": "4513:36:11"
															},
															"nativeSrc": "4513:36:11",
															"nodeType": "YulExpressionStatement",
															"src": "4513:36:11"
														},
														{
															"nativeSrc": "4558:27:11",
															"nodeType": "YulAssignment",
															"src": "4558:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4570:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4570:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4581:3:11",
																		"nodeType": "YulLiteral",
																		"src": "4581:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4566:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4566:3:11"
																},
																"nativeSrc": "4566:19:11",
																"nodeType": "YulFunctionCall",
																"src": "4566:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4558:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4558:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4189:402:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4340:9:11",
														"nodeType": "YulTypedName",
														"src": "4340:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4354:4:11",
														"nodeType": "YulTypedName",
														"src": "4354:4:11",
														"type": ""
													}
												],
												"src": "4189:402:11"
											},
											{
												"body": {
													"nativeSrc": "4677:103:11",
													"nodeType": "YulBlock",
													"src": "4677:103:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4723:16:11",
																"nodeType": "YulBlock",
																"src": "4723:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4732:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4732:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4735:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4735:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4725:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4725:6:11"
																			},
																			"nativeSrc": "4725:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4725:12:11"
																		},
																		"nativeSrc": "4725:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4725:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4698:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4698:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4707:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4707:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4694:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4694:3:11"
																		},
																		"nativeSrc": "4694:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4694:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4719:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4719:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4690:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4690:3:11"
																},
																"nativeSrc": "4690:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4690:32:11"
															},
															"nativeSrc": "4687:52:11",
															"nodeType": "YulIf",
															"src": "4687:52:11"
														},
														{
															"nativeSrc": "4748:26:11",
															"nodeType": "YulAssignment",
															"src": "4748:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4764:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4764:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4758:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4758:5:11"
																},
																"nativeSrc": "4758:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4758:16:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4748:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4748:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "4596:184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4643:9:11",
														"nodeType": "YulTypedName",
														"src": "4643:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4654:7:11",
														"nodeType": "YulTypedName",
														"src": "4654:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4666:6:11",
														"nodeType": "YulTypedName",
														"src": "4666:6:11",
														"type": ""
													}
												],
												"src": "4596:184:11"
											},
											{
												"body": {
													"nativeSrc": "4959:236:11",
													"nodeType": "YulBlock",
													"src": "4959:236:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4976:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4976:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4987:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4987:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4969:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:11"
																},
																"nativeSrc": "4969:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4969:21:11"
															},
															"nativeSrc": "4969:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "4969:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5010:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5010:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5021:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5021:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5006:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5006:3:11"
																		},
																		"nativeSrc": "5006:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5006:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5026:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5026:2:11",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4999:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4999:6:11"
																},
																"nativeSrc": "4999:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4999:30:11"
															},
															"nativeSrc": "4999:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "4999:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5049:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5049:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5060:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5060:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5045:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5045:3:11"
																		},
																		"nativeSrc": "5045:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5045:18:11"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e74617469",
																		"kind": "string",
																		"nativeSrc": "5065:34:11",
																		"nodeType": "YulLiteral",
																		"src": "5065:34:11",
																		"type": "",
																		"value": "ERC1967Upgrade: new implementati"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5038:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5038:6:11"
																},
																"nativeSrc": "5038:62:11",
																"nodeType": "YulFunctionCall",
																"src": "5038:62:11"
															},
															"nativeSrc": "5038:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "5038:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5120:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5120:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5131:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5131:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5116:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5116:3:11"
																		},
																		"nativeSrc": "5116:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5116:18:11"
																	},
																	{
																		"hexValue": "6f6e206973206e6f742055555053",
																		"kind": "string",
																		"nativeSrc": "5136:16:11",
																		"nodeType": "YulLiteral",
																		"src": "5136:16:11",
																		"type": "",
																		"value": "on is not UUPS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5109:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5109:6:11"
																},
																"nativeSrc": "5109:44:11",
																"nodeType": "YulFunctionCall",
																"src": "5109:44:11"
															},
															"nativeSrc": "5109:44:11",
															"nodeType": "YulExpressionStatement",
															"src": "5109:44:11"
														},
														{
															"nativeSrc": "5162:27:11",
															"nodeType": "YulAssignment",
															"src": "5162:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5174:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5174:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5185:3:11",
																		"nodeType": "YulLiteral",
																		"src": "5185:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5170:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5170:3:11"
																},
																"nativeSrc": "5170:19:11",
																"nodeType": "YulFunctionCall",
																"src": "5170:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5162:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5162:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4785:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4936:9:11",
														"nodeType": "YulTypedName",
														"src": "4936:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:11",
														"nodeType": "YulTypedName",
														"src": "4950:4:11",
														"type": ""
													}
												],
												"src": "4785:410:11"
											},
											{
												"body": {
													"nativeSrc": "5374:231:11",
													"nodeType": "YulBlock",
													"src": "5374:231:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5391:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5391:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5402:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5384:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5384:6:11"
																},
																"nativeSrc": "5384:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5384:21:11"
															},
															"nativeSrc": "5384:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "5384:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5425:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5425:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5436:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5421:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:11"
																		},
																		"nativeSrc": "5421:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5421:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5441:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5441:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5414:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:11"
																},
																"nativeSrc": "5414:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5414:30:11"
															},
															"nativeSrc": "5414:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "5414:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5464:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5464:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5475:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5475:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5460:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5460:3:11"
																		},
																		"nativeSrc": "5460:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5460:18:11"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f78",
																		"kind": "string",
																		"nativeSrc": "5480:34:11",
																		"nodeType": "YulLiteral",
																		"src": "5480:34:11",
																		"type": "",
																		"value": "ERC1967Upgrade: unsupported prox"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5453:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5453:6:11"
																},
																"nativeSrc": "5453:62:11",
																"nodeType": "YulFunctionCall",
																"src": "5453:62:11"
															},
															"nativeSrc": "5453:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "5453:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5535:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5535:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5546:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5546:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5531:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5531:3:11"
																		},
																		"nativeSrc": "5531:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5531:18:11"
																	},
																	{
																		"hexValue": "6961626c6555554944",
																		"kind": "string",
																		"nativeSrc": "5551:11:11",
																		"nodeType": "YulLiteral",
																		"src": "5551:11:11",
																		"type": "",
																		"value": "iableUUID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5524:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5524:6:11"
																},
																"nativeSrc": "5524:39:11",
																"nodeType": "YulFunctionCall",
																"src": "5524:39:11"
															},
															"nativeSrc": "5524:39:11",
															"nodeType": "YulExpressionStatement",
															"src": "5524:39:11"
														},
														{
															"nativeSrc": "5572:27:11",
															"nodeType": "YulAssignment",
															"src": "5572:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5584:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5584:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5595:3:11",
																		"nodeType": "YulLiteral",
																		"src": "5595:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5580:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5580:3:11"
																},
																"nativeSrc": "5580:19:11",
																"nodeType": "YulFunctionCall",
																"src": "5580:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5572:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5572:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5200:405:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5351:9:11",
														"nodeType": "YulTypedName",
														"src": "5351:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5365:4:11",
														"nodeType": "YulTypedName",
														"src": "5365:4:11",
														"type": ""
													}
												],
												"src": "5200:405:11"
											},
											{
												"body": {
													"nativeSrc": "5784:182:11",
													"nodeType": "YulBlock",
													"src": "5784:182:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5801:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5801:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5812:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5812:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5794:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5794:6:11"
																},
																"nativeSrc": "5794:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5794:21:11"
															},
															"nativeSrc": "5794:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "5794:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5835:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5835:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5846:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5846:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5831:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5831:3:11"
																		},
																		"nativeSrc": "5831:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5831:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5851:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5851:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5824:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5824:6:11"
																},
																"nativeSrc": "5824:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5824:30:11"
															},
															"nativeSrc": "5824:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "5824:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5874:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5874:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5885:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5885:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5870:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5870:3:11"
																		},
																		"nativeSrc": "5870:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5870:18:11"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "5890:34:11",
																		"nodeType": "YulLiteral",
																		"src": "5890:34:11",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5863:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5863:6:11"
																},
																"nativeSrc": "5863:62:11",
																"nodeType": "YulFunctionCall",
																"src": "5863:62:11"
															},
															"nativeSrc": "5863:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "5863:62:11"
														},
														{
															"nativeSrc": "5934:26:11",
															"nodeType": "YulAssignment",
															"src": "5934:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5946:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5946:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5957:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5957:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5942:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5942:3:11"
																},
																"nativeSrc": "5942:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5942:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5934:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5934:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5610:356:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5761:9:11",
														"nodeType": "YulTypedName",
														"src": "5761:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5775:4:11",
														"nodeType": "YulTypedName",
														"src": "5775:4:11",
														"type": ""
													}
												],
												"src": "5610:356:11"
											},
											{
												"body": {
													"nativeSrc": "6145:233:11",
													"nodeType": "YulBlock",
													"src": "6145:233:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6162:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6162:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6173:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6173:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6155:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:11"
																},
																"nativeSrc": "6155:21:11",
																"nodeType": "YulFunctionCall",
																"src": "6155:21:11"
															},
															"nativeSrc": "6155:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "6155:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6196:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6207:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6207:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6192:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:11"
																		},
																		"nativeSrc": "6192:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6192:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6212:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6212:2:11",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6185:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6185:6:11"
																},
																"nativeSrc": "6185:30:11",
																"nodeType": "YulFunctionCall",
																"src": "6185:30:11"
															},
															"nativeSrc": "6185:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "6185:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6235:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6235:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6246:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6246:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6231:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6231:3:11"
																		},
																		"nativeSrc": "6231:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6231:18:11"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nativeSrc": "6251:34:11",
																		"nodeType": "YulLiteral",
																		"src": "6251:34:11",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6224:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6224:6:11"
																},
																"nativeSrc": "6224:62:11",
																"nodeType": "YulFunctionCall",
																"src": "6224:62:11"
															},
															"nativeSrc": "6224:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "6224:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6306:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6306:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6317:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6317:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6302:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6302:3:11"
																		},
																		"nativeSrc": "6302:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6302:18:11"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nativeSrc": "6322:13:11",
																		"nodeType": "YulLiteral",
																		"src": "6322:13:11",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6295:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6295:6:11"
																},
																"nativeSrc": "6295:41:11",
																"nodeType": "YulFunctionCall",
																"src": "6295:41:11"
															},
															"nativeSrc": "6295:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "6295:41:11"
														},
														{
															"nativeSrc": "6345:27:11",
															"nodeType": "YulAssignment",
															"src": "6345:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6357:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6357:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6368:3:11",
																		"nodeType": "YulLiteral",
																		"src": "6368:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6353:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6353:3:11"
																},
																"nativeSrc": "6353:19:11",
																"nodeType": "YulFunctionCall",
																"src": "6353:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6345:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6345:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5971:407:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6122:9:11",
														"nodeType": "YulTypedName",
														"src": "6122:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6136:4:11",
														"nodeType": "YulTypedName",
														"src": "6136:4:11",
														"type": ""
													}
												],
												"src": "5971:407:11"
											},
											{
												"body": {
													"nativeSrc": "6557:235:11",
													"nodeType": "YulBlock",
													"src": "6557:235:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6574:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6574:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6567:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6567:6:11"
																},
																"nativeSrc": "6567:21:11",
																"nodeType": "YulFunctionCall",
																"src": "6567:21:11"
															},
															"nativeSrc": "6567:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "6567:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6608:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6608:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6619:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6619:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6604:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6604:3:11"
																		},
																		"nativeSrc": "6604:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6604:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6624:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6624:2:11",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6597:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6597:6:11"
																},
																"nativeSrc": "6597:30:11",
																"nodeType": "YulFunctionCall",
																"src": "6597:30:11"
															},
															"nativeSrc": "6597:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "6597:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6647:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6647:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6658:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6658:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6643:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6643:3:11"
																		},
																		"nativeSrc": "6643:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6643:18:11"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nativeSrc": "6663:34:11",
																		"nodeType": "YulLiteral",
																		"src": "6663:34:11",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6636:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6636:6:11"
																},
																"nativeSrc": "6636:62:11",
																"nodeType": "YulFunctionCall",
																"src": "6636:62:11"
															},
															"nativeSrc": "6636:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "6636:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6718:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6718:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6729:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6729:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6714:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6714:3:11"
																		},
																		"nativeSrc": "6714:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6714:18:11"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "6734:15:11",
																		"nodeType": "YulLiteral",
																		"src": "6734:15:11",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6707:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6707:6:11"
																},
																"nativeSrc": "6707:43:11",
																"nodeType": "YulFunctionCall",
																"src": "6707:43:11"
															},
															"nativeSrc": "6707:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "6707:43:11"
														},
														{
															"nativeSrc": "6759:27:11",
															"nodeType": "YulAssignment",
															"src": "6759:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6771:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6771:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6782:3:11",
																		"nodeType": "YulLiteral",
																		"src": "6782:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6767:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6767:3:11"
																},
																"nativeSrc": "6767:19:11",
																"nodeType": "YulFunctionCall",
																"src": "6767:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6759:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6759:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6383:409:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6534:9:11",
														"nodeType": "YulTypedName",
														"src": "6534:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6548:4:11",
														"nodeType": "YulTypedName",
														"src": "6548:4:11",
														"type": ""
													}
												],
												"src": "6383:409:11"
											},
											{
												"body": {
													"nativeSrc": "6863:184:11",
													"nodeType": "YulBlock",
													"src": "6863:184:11",
													"statements": [
														{
															"nativeSrc": "6873:10:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6873:10:11",
															"value": {
																"kind": "number",
																"nativeSrc": "6882:1:11",
																"nodeType": "YulLiteral",
																"src": "6882:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6877:1:11",
																	"nodeType": "YulTypedName",
																	"src": "6877:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6942:63:11",
																"nodeType": "YulBlock",
																"src": "6942:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "6967:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6967:3:11"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "6972:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "6972:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6963:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "6963:3:11"
																					},
																					"nativeSrc": "6963:11:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6963:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "6986:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "6986:3:11"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "6991:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "6991:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6982:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "6982:3:11"
																							},
																							"nativeSrc": "6982:11:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6982:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6976:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6976:5:11"
																					},
																					"nativeSrc": "6976:18:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6976:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6956:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6956:6:11"
																			},
																			"nativeSrc": "6956:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6956:39:11"
																		},
																		"nativeSrc": "6956:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6956:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6903:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6903:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6906:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6906:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6900:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6900:2:11"
																},
																"nativeSrc": "6900:13:11",
																"nodeType": "YulFunctionCall",
																"src": "6900:13:11"
															},
															"nativeSrc": "6892:113:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6914:19:11",
																"nodeType": "YulBlock",
																"src": "6914:19:11",
																"statements": [
																	{
																		"nativeSrc": "6916:15:11",
																		"nodeType": "YulAssignment",
																		"src": "6916:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6925:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "6925:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6928:2:11",
																					"nodeType": "YulLiteral",
																					"src": "6928:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6921:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6921:3:11"
																			},
																			"nativeSrc": "6921:10:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6921:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6916:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "6916:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6896:3:11",
																"nodeType": "YulBlock",
																"src": "6896:3:11",
																"statements": []
															},
															"src": "6892:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7025:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "7025:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7030:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7030:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7021:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7021:3:11"
																		},
																		"nativeSrc": "7021:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7021:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7039:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7039:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7014:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7014:6:11"
																},
																"nativeSrc": "7014:27:11",
																"nodeType": "YulFunctionCall",
																"src": "7014:27:11"
															},
															"nativeSrc": "7014:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "7014:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6797:250:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6841:3:11",
														"nodeType": "YulTypedName",
														"src": "6841:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6846:3:11",
														"nodeType": "YulTypedName",
														"src": "6846:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6851:6:11",
														"nodeType": "YulTypedName",
														"src": "6851:6:11",
														"type": ""
													}
												],
												"src": "6797:250:11"
											},
											{
												"body": {
													"nativeSrc": "7189:150:11",
													"nodeType": "YulBlock",
													"src": "7189:150:11",
													"statements": [
														{
															"nativeSrc": "7199:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7199:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7219:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7219:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7213:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7213:5:11"
																},
																"nativeSrc": "7213:13:11",
																"nodeType": "YulFunctionCall",
																"src": "7213:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7203:6:11",
																	"nodeType": "YulTypedName",
																	"src": "7203:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7274:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7274:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7282:4:11",
																				"nodeType": "YulLiteral",
																				"src": "7282:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7270:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7270:3:11"
																		},
																		"nativeSrc": "7270:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7270:17:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7289:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7289:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7294:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7294:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7235:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "7235:34:11"
																},
																"nativeSrc": "7235:66:11",
																"nodeType": "YulFunctionCall",
																"src": "7235:66:11"
															},
															"nativeSrc": "7235:66:11",
															"nodeType": "YulExpressionStatement",
															"src": "7235:66:11"
														},
														{
															"nativeSrc": "7310:23:11",
															"nodeType": "YulAssignment",
															"src": "7310:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7321:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7321:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7326:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7326:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7317:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7317:3:11"
																},
																"nativeSrc": "7317:16:11",
																"nodeType": "YulFunctionCall",
																"src": "7317:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7310:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7310:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7052:287:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7165:3:11",
														"nodeType": "YulTypedName",
														"src": "7165:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7170:6:11",
														"nodeType": "YulTypedName",
														"src": "7170:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7181:3:11",
														"nodeType": "YulTypedName",
														"src": "7181:3:11",
														"type": ""
													}
												],
												"src": "7052:287:11"
											},
											{
												"body": {
													"nativeSrc": "7518:179:11",
													"nodeType": "YulBlock",
													"src": "7518:179:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7535:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7535:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7546:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7546:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7528:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7528:6:11"
																},
																"nativeSrc": "7528:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7528:21:11"
															},
															"nativeSrc": "7528:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "7528:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7569:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7569:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7580:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7580:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7565:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7565:3:11"
																		},
																		"nativeSrc": "7565:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7565:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7585:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7585:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7558:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7558:6:11"
																},
																"nativeSrc": "7558:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7558:30:11"
															},
															"nativeSrc": "7558:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "7558:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7608:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7608:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7619:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7619:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7604:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7604:3:11"
																		},
																		"nativeSrc": "7604:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7604:18:11"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "7624:31:11",
																		"nodeType": "YulLiteral",
																		"src": "7624:31:11",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7597:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7597:6:11"
																},
																"nativeSrc": "7597:59:11",
																"nodeType": "YulFunctionCall",
																"src": "7597:59:11"
															},
															"nativeSrc": "7597:59:11",
															"nodeType": "YulExpressionStatement",
															"src": "7597:59:11"
														},
														{
															"nativeSrc": "7665:26:11",
															"nodeType": "YulAssignment",
															"src": "7665:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7677:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7677:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7688:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7688:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7673:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7673:3:11"
																},
																"nativeSrc": "7673:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7673:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7665:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7665:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7344:353:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7495:9:11",
														"nodeType": "YulTypedName",
														"src": "7495:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7509:4:11",
														"nodeType": "YulTypedName",
														"src": "7509:4:11",
														"type": ""
													}
												],
												"src": "7344:353:11"
											},
											{
												"body": {
													"nativeSrc": "7823:275:11",
													"nodeType": "YulBlock",
													"src": "7823:275:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7840:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7840:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7851:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7851:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7833:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7833:6:11"
																},
																"nativeSrc": "7833:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7833:21:11"
															},
															"nativeSrc": "7833:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "7833:21:11"
														},
														{
															"nativeSrc": "7863:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7863:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7883:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7883:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7877:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7877:5:11"
																},
																"nativeSrc": "7877:13:11",
																"nodeType": "YulFunctionCall",
																"src": "7877:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7867:6:11",
																	"nodeType": "YulTypedName",
																	"src": "7867:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7910:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7910:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7921:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7921:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7906:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7906:3:11"
																		},
																		"nativeSrc": "7906:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7906:18:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7926:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7926:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7899:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7899:6:11"
																},
																"nativeSrc": "7899:34:11",
																"nodeType": "YulFunctionCall",
																"src": "7899:34:11"
															},
															"nativeSrc": "7899:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "7899:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7981:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7981:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7989:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7989:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7977:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7977:3:11"
																		},
																		"nativeSrc": "7977:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7977:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7998:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7998:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8009:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8009:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7994:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7994:3:11"
																		},
																		"nativeSrc": "7994:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7994:18:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8014:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8014:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7942:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "7942:34:11"
																},
																"nativeSrc": "7942:79:11",
																"nodeType": "YulFunctionCall",
																"src": "7942:79:11"
															},
															"nativeSrc": "7942:79:11",
															"nodeType": "YulExpressionStatement",
															"src": "7942:79:11"
														},
														{
															"nativeSrc": "8030:62:11",
															"nodeType": "YulAssignment",
															"src": "8030:62:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8046:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8046:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "8065:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "8065:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8073:2:11",
																								"nodeType": "YulLiteral",
																								"src": "8073:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "8061:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "8061:3:11"
																						},
																						"nativeSrc": "8061:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "8061:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8082:2:11",
																								"nodeType": "YulLiteral",
																								"src": "8082:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "8078:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "8078:3:11"
																						},
																						"nativeSrc": "8078:7:11",
																						"nodeType": "YulFunctionCall",
																						"src": "8078:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "8057:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8057:3:11"
																				},
																				"nativeSrc": "8057:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8057:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8042:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8042:3:11"
																		},
																		"nativeSrc": "8042:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8042:45:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8089:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8089:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8038:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8038:3:11"
																},
																"nativeSrc": "8038:54:11",
																"nodeType": "YulFunctionCall",
																"src": "8038:54:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8030:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8030:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7702:396:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7792:9:11",
														"nodeType": "YulTypedName",
														"src": "7792:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7803:6:11",
														"nodeType": "YulTypedName",
														"src": "7803:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7814:4:11",
														"nodeType": "YulTypedName",
														"src": "7814:4:11",
														"type": ""
													}
												],
												"src": "7702:396:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"696": [
									{
										"length": 32,
										"start": 399
									},
									{
										"length": 32,
										"start": 472
									},
									{
										"length": 32,
										"start": 654
									},
									{
										"length": 32,
										"start": 718
									},
									{
										"length": 32,
										"start": 865
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100865760003560e01c806352d1902d1161005957806352d1902d146100fe578063715018a6146101135780638129fc1c146101285780638da5cb5b1461013d578063f2fde38b1461016557600080fd5b806306661abd1461008b5780633659cfe6146100b4578063371303c0146100d65780634f1ef286146100eb575b600080fd5b34801561009757600080fd5b506100a160c95481565b6040519081526020015b60405180910390f35b3480156100c057600080fd5b506100d46100cf366004610ac5565b610185565b005b3480156100e257600080fd5b506100d461026d565b6100d46100f9366004610af6565b610284565b34801561010a57600080fd5b506100a1610354565b34801561011f57600080fd5b506100d4610407565b34801561013457600080fd5b506100d461041b565b34801561014957600080fd5b506033546040516001600160a01b0390911681526020016100ab565b34801561017157600080fd5b506100d4610180366004610ac5565b610533565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036101d65760405162461bcd60e51b81526004016101cd90610bb8565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661021f600080516020610d4f833981519152546001600160a01b031690565b6001600160a01b0316146102455760405162461bcd60e51b81526004016101cd90610c04565b61024e816105a9565b6040805160008082526020820190925261026a918391906105b1565b50565b60c9805490600061027d83610c50565b9190505550565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036102cc5760405162461bcd60e51b81526004016101cd90610bb8565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610315600080516020610d4f833981519152546001600160a01b031690565b6001600160a01b03161461033b5760405162461bcd60e51b81526004016101cd90610c04565b610344826105a9565b610350828260016105b1565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103f45760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016101cd565b50600080516020610d4f83398151915290565b61040f610721565b610419600061077b565b565b600054610100900460ff161580801561043b5750600054600160ff909116105b806104555750303b158015610455575060005460ff166001145b6104b85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101cd565b6000805460ff1916600117905580156104db576000805461ff0019166101001790555b6104e36107cd565b6104eb6107fc565b801561026a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b61053b610721565b6001600160a01b0381166105a05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101cd565b61026a8161077b565b61026a610721565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156105e9576105e483610823565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610643575060408051601f3d908101601f1916820190925261064091810190610c77565b60015b6106a65760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016101cd565b600080516020610d4f83398151915281146107155760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016101cd565b506105e48383836108bf565b6033546001600160a01b031633146104195760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101cd565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166107f45760405162461bcd60e51b81526004016101cd90610c90565b6104196108ea565b600054610100900460ff166104195760405162461bcd60e51b81526004016101cd90610c90565b6001600160a01b0381163b6108905760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101cd565b600080516020610d4f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6108c88361091a565b6000825111806108d55750805b156105e4576108e4838361095a565b50505050565b600054610100900460ff166109115760405162461bcd60e51b81526004016101cd90610c90565b6104193361077b565b61092381610823565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061097f8383604051806060016040528060278152602001610d6f60279139610986565b9392505050565b6060600080856001600160a01b0316856040516109a39190610cff565b600060405180830381855af49150503d80600081146109de576040519150601f19603f3d011682016040523d82523d6000602084013e6109e3565b606091505b50915091506109f4868383876109fe565b9695505050505050565b60608315610a6d578251600003610a66576001600160a01b0385163b610a665760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101cd565b5081610a77565b610a778383610a7f565b949350505050565b815115610a8f5781518083602001fd5b8060405162461bcd60e51b81526004016101cd9190610d1b565b80356001600160a01b0381168114610ac057600080fd5b919050565b600060208284031215610ad757600080fd5b61097f82610aa9565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610b0957600080fd5b610b1283610aa9565b9150602083013567ffffffffffffffff80821115610b2f57600080fd5b818501915085601f830112610b4357600080fd5b813581811115610b5557610b55610ae0565b604051601f8201601f19908116603f01168101908382118183101715610b7d57610b7d610ae0565b81604052828152886020848701011115610b9657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060018201610c7057634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610c8957600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015610cf6578181015183820152602001610cde565b50506000910152565b60008251610d11818460208701610cdb565b9190910192915050565b6020815260008251806020840152610d3a816040850160208701610cdb565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220bcfac9a2f873366c36f2b91f3bf1a0987d369eab1202f288db73c1d0d13f58dc64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x371303C0 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH1 0xC9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0x185 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x26D JUMP JUMPDEST PUSH2 0xD4 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0x284 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x354 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x407 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x41B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x1D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD4F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x26A SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x5B1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x27D DUP4 PUSH2 0xC50 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x2CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0xBB8 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x315 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD4F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x344 DUP3 PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x350 DUP3 DUP3 PUSH1 0x1 PUSH2 0x5B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD4F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x40F PUSH2 0x721 JUMP JUMPDEST PUSH2 0x419 PUSH1 0x0 PUSH2 0x77B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x43B JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x455 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x455 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x4E3 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x4EB PUSH2 0x7FC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x53B PUSH2 0x721 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x26A DUP2 PUSH2 0x77B JUMP JUMPDEST PUSH2 0x26A PUSH2 0x721 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5E9 JUMPI PUSH2 0x5E4 DUP4 PUSH2 0x823 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x643 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x640 SWAP2 DUP2 ADD SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD4F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST POP PUSH2 0x5E4 DUP4 DUP4 DUP4 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x419 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0xC90 JUMP JUMPDEST PUSH2 0x419 PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x419 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0xC90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x890 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD4F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x8C8 DUP4 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x8D5 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x5E4 JUMPI PUSH2 0x8E4 DUP4 DUP4 PUSH2 0x95A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x911 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0xC90 JUMP JUMPDEST PUSH2 0x419 CALLER PUSH2 0x77B JUMP JUMPDEST PUSH2 0x923 DUP2 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x97F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6F PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x986 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9DE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x9F4 DUP7 DUP4 DUP4 DUP8 PUSH2 0x9FE JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xA6D JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0xA66 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1CD JUMP JUMPDEST POP DUP2 PUSH2 0xA77 JUMP JUMPDEST PUSH2 0xA77 DUP4 DUP4 PUSH2 0xA7F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xA8F JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0xD1B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97F DUP3 PUSH2 0xAA9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB12 DUP4 PUSH2 0xAA9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB55 JUMPI PUSH2 0xB55 PUSH2 0xAE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xB7D JUMPI PUSH2 0xB7D PUSH2 0xAE0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xB96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xC70 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCF6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCDE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xD11 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xCDB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xD3A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A2646970667358221220BC STATICCALL 0xC9 LOG2 0xF8 PUSH20 0x366C36F2B91F3BF1A0987D369EAB1202F288DB73 0xC1 0xD0 0xD1 EXTCODEHASH PC 0xDC PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "288:512:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;418:20;;;;;;;;;;;;;;;;;;;160:25:11;;;148:2;133:18;418:20:10;;;;;;;;3387:195:6;;;;;;;;;;-1:-1:-1;3387:195:6;;;;;:::i;:::-;;:::i;:::-;;746:52:10;;;;;;;;;;;;;:::i;3901:220:6:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;2064:101:0:-;;;;;;;;;;;;;:::i;504:108:10:-;;;;;;;;;;;;;:::i;1441:85:0:-;;;;;;;;;;-1:-1:-1;1513:6:0;;1441:85;;-1:-1:-1;;;;;1513:6:0;;;2025:51:11;;2013:2;1998:18;1441:85:0;1879:203:11;2314:198:0;;;;;;;;;;-1:-1:-1;2314:198:0;;;;;:::i;:::-;;:::i;3387:195:6:-;-1:-1:-1;;;;;1898:6:6;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:6;;;;;;;:::i;:::-;;;;;;;;;1995:6;-1:-1:-1;;;;;1971:30:6;:20;-1:-1:-1;;;;;;;;;;;1536:65:3;-1:-1:-1;;;;;1536:65:3;;1457:151;1971:20:6;-1:-1:-1;;;;;1971:30:6;;1963:87;;;;-1:-1:-1;;;1963:87:6;;;;;;;:::i;:::-;3468:36:::1;3486:17;3468;:36::i;:::-;3555:12;::::0;;3565:1:::1;3555:12:::0;;;::::1;::::0;::::1;::::0;;;3514:61:::1;::::0;3536:17;;3555:12;3514:21:::1;:61::i;:::-;3387:195:::0;:::o;746:52:10:-;784:5;:7;;;:5;:7;;;:::i;:::-;;;;;;746:52::o;3901:220:6:-;-1:-1:-1;;;;;1898:6:6;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:6;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:6;:20;-1:-1:-1;;;;;;;;;;;1536:65:3;-1:-1:-1;;;;;1536:65:3;;1457:151;1971:20:6;-1:-1:-1;;;;;1971:30:6;;1963:87;;;;-1:-1:-1;;;1963:87:6;;;;;;;:::i;:::-;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;:::-;3901:220:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:6;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:6;;3352:2:11;2308:92:6;;;3334:21:11;3391:2;3371:18;;;3364:30;3430:34;3410:18;;;3403:62;3501:26;3481:18;;;3474:54;3545:19;;2308:92:6;3150:420:11;2308:92:6;-1:-1:-1;;;;;;;;;;;;3006:131:6;:::o;2064:101:0:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;504:108:10:-;3279:19:5;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:5;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:5;1713:19:7;:23;;;3387:66:5;;-1:-1:-1;3436:12:5;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:5;;3777:2:11;3325:201:5;;;3759:21:11;3816:2;3796:18;;;3789:30;3855:34;3835:18;;;3828:62;-1:-1:-1;;;3906:18:11;;;3899:44;3960:19;;3325:201:5;3575:410:11;3325:201:5;3536:12;:16;;-1:-1:-1;;3536:16:5;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:5;;;;;3562:65;555:16:10::1;:14;:16::i;:::-;581:24;:22;:24::i;:::-;3651:14:5::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:5;;;3721:14;;-1:-1:-1;4142:36:11;;3721:14:5;;4130:2:11;4115:18;3721:14:5;;;;;;;3269:483;504:108:10:o;2314:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:0;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:0;;4391:2:11;2394:73:0::1;::::0;::::1;4373:21:11::0;4430:2;4410:18;;;4403:30;4469:34;4449:18;;;4442:62;-1:-1:-1;;;4520:18:11;;;4513:36;4566:19;;2394:73:0::1;4189:402:11::0;2394:73:0::1;2477:28;2496:8;2477:18;:28::i;618:118:10:-:0;1334:13:0;:11;:13::i;2820:944:3:-;971:66;3236:59;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;:::-;2820:944;;;:::o;3232:526::-;3412:17;-1:-1:-1;;;;;3383:61:3;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:63:3;;;;;;;;-1:-1:-1;;3383:63:3;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;-1:-1:-1;;;3610:56:3;;4987:2:11;3610:56:3;;;4969:21:11;5026:2;5006:18;;;4999:30;5065:34;5045:18;;;5038:62;-1:-1:-1;;;5116:18:11;;;5109:44;5170:19;;3610:56:3;4785:410:11;3379:302:3;-1:-1:-1;;;;;;;;;;;3496:28:3;;3488:82;;;;-1:-1:-1;;;3488:82:3;;5402:2:11;3488:82:3;;;5384:21:11;5441:2;5421:18;;;5414:30;5480:34;5460:18;;;5453:62;-1:-1:-1;;;5531:18:11;;;5524:39;5580:19;;3488:82:3;5200:405:11;3488:82:3;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;1599:130:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:8;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;5812:2:11;1654:68:0;;;5794:21:11;;;5831:18;;;5824:30;5890:34;5870:18;;;5863:62;5942:18;;1654:68:0;5610:356:11;2666:187:0;2758:6;;;-1:-1:-1;;;;;2774:17:0;;;-1:-1:-1;;;;;;2774:17:0;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1003:95::-;5374:13:5;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:5;;;;;;;:::i;:::-;1065:26:0::1;:24;:26::i;1042:67:6:-:0;5374:13:5;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:5;;;;;;;:::i;1699:281:3:-;-1:-1:-1;;;;;1713:19:7;;;1772:106:3;;;;-1:-1:-1;;;1772:106:3;;6585:2:11;1772:106:3;;;6567:21:11;6624:2;6604:18;;;6597:30;6663:34;6643:18;;;6636:62;-1:-1:-1;;;6714:18:11;;;6707:43;6767:19;;1772:106:3;6383:409:11;1772:106:3;-1:-1:-1;;;;;;;;;;;1888:85:3;;-1:-1:-1;;;;;;1888:85:3;-1:-1:-1;;;;;1888:85:3;;;;;;;;;;1699:281::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;:::-;;2372:276;;;:::o;1104:111:0:-;5374:13:5;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:5;;;;;;;:::i;:::-;1176:32:0::1;929:10:8::0;1176:18:0::1;:32::i;2086:152:3:-:0;2152:37;2171:17;2152:18;:37::i;:::-;2204:27;;-1:-1:-1;;;;;2204:27:3;;;;;;;;2086:152;:::o;6685:198:7:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6792:84;6685:198;-1:-1:-1;;;6685:198:7:o;7069:325::-;7210:12;7235;7249:23;7276:6;-1:-1:-1;;;;;7276:19:7;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:7:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:7;;;8124:60;;;;-1:-1:-1;;;8124:60:7;;7546:2:11;8124:60:7;;;7528:21:11;7585:2;7565:18;;;7558:30;7624:31;7604:18;;;7597:59;7673:18;;8124:60:7;7344:353:11;8124:60:7;-1:-1:-1;8219:10:7;8212:17;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;:::o;8832:540::-;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:7;;;;;;;;:::i;196:173:11:-;264:20;;-1:-1:-1;;;;;313:31:11;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;565:127::-;626:10;621:3;617:20;614:1;607:31;657:4;654:1;647:15;681:4;678:1;671:15;697:995;774:6;782;835:2;823:9;814:7;810:23;806:32;803:52;;;851:1;848;841:12;803:52;874:29;893:9;874:29;:::i;:::-;864:39;;954:2;943:9;939:18;926:32;977:18;1018:2;1010:6;1007:14;1004:34;;;1034:1;1031;1024:12;1004:34;1072:6;1061:9;1057:22;1047:32;;1117:7;1110:4;1106:2;1102:13;1098:27;1088:55;;1139:1;1136;1129:12;1088:55;1175:2;1162:16;1197:2;1193;1190:10;1187:36;;;1203:18;;:::i;:::-;1278:2;1272:9;1246:2;1332:13;;-1:-1:-1;;1328:22:11;;;1352:2;1324:31;1320:40;1308:53;;;1376:18;;;1396:22;;;1373:46;1370:72;;;1422:18;;:::i;:::-;1462:10;1458:2;1451:22;1497:2;1489:6;1482:18;1537:7;1532:2;1527;1523;1519:11;1515:20;1512:33;1509:53;;;1558:1;1555;1548:12;1509:53;1614:2;1609;1605;1601:11;1596:2;1588:6;1584:15;1571:46;1659:1;1654:2;1649;1641:6;1637:15;1633:24;1626:35;1680:6;1670:16;;;;;;;697:995;;;;;:::o;2087:408::-;2289:2;2271:21;;;2328:2;2308:18;;;2301:30;2367:34;2362:2;2347:18;;2340:62;-1:-1:-1;;;2433:2:11;2418:18;;2411:42;2485:3;2470:19;;2087:408::o;2500:::-;2702:2;2684:21;;;2741:2;2721:18;;;2714:30;2780:34;2775:2;2760:18;;2753:62;-1:-1:-1;;;2846:2:11;2831:18;;2824:42;2898:3;2883:19;;2500:408::o;2913:232::-;2952:3;2973:17;;;2970:140;;3032:10;3027:3;3023:20;3020:1;3013:31;3067:4;3064:1;3057:15;3095:4;3092:1;3085:15;2970:140;-1:-1:-1;3137:1:11;3126:13;;2913:232::o;4596:184::-;4666:6;4719:2;4707:9;4698:7;4694:23;4690:32;4687:52;;;4735:1;4732;4725:12;4687:52;-1:-1:-1;4758:16:11;;4596:184;-1:-1:-1;4596:184:11:o;5971:407::-;6173:2;6155:21;;;6212:2;6192:18;;;6185:30;6251:34;6246:2;6231:18;;6224:62;-1:-1:-1;;;6317:2:11;6302:18;;6295:41;6368:3;6353:19;;5971:407::o;6797:250::-;6882:1;6892:113;6906:6;6903:1;6900:13;6892:113;;;6982:11;;;6976:18;6963:11;;;6956:39;6928:2;6921:10;6892:113;;;-1:-1:-1;;7039:1:11;7021:16;;7014:27;6797:250::o;7052:287::-;7181:3;7219:6;7213:13;7235:66;7294:6;7289:3;7282:4;7274:6;7270:17;7235:66;:::i;:::-;7317:16;;;;;7052:287;-1:-1:-1;;7052:287:11:o;7702:396::-;7851:2;7840:9;7833:21;7814:4;7883:6;7877:13;7926:6;7921:2;7910:9;7906:18;7899:34;7942:79;8014:6;8009:2;7998:9;7994:18;7989:2;7981:6;7977:15;7942:79;:::i;:::-;8082:2;8061:15;-1:-1:-1;;8057:29:11;8042:45;;;;8089:2;8038:54;;7702:396;-1:-1:-1;;7702:396:11:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "706200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"count()": "2285",
								"inc()": "24475",
								"initialize()": "infinite",
								"owner()": "2367",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28424",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 288,
									"end": 800,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 288,
									"end": 800,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 288,
									"end": 800,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1332,
									"end": 1336,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 445,
									"end": 498,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 445,
									"end": 498,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 445,
									"end": 498,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 445,
									"end": 498,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 445,
									"end": 498,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 445,
									"end": 498,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 498,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 445,
									"end": 498,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 445,
									"end": 498,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 445,
									"end": 498,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 469,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 469,
									"end": 489,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 469,
									"end": 491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 469,
									"end": 491,
									"name": "tag",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 469,
									"end": 491,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 288,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 288,
									"end": 800,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5939,
									"end": 6219,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 5939,
									"end": 6219,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6006,
									"end": 6020,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 294,
									"end": 328,
									"name": "PUSH",
									"source": 11,
									"value": "496E697469616C697A61626C653A20636F6E747261637420697320696E697469"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 267,
									"end": 329,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "616C697A696E67"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 338,
									"end": 375,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 392,
									"end": 411,
									"name": "PUSH",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 392,
									"end": 411,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6094,
									"end": 6109,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6078,
									"end": 6109,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6125,
									"end": 6137,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6140,
									"end": 6155,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 564,
									"end": 600,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 564,
									"end": 600,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 564,
									"end": 600,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "PUSH",
									"source": 5,
									"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 552,
									"end": 554,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 537,
									"end": 555,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "LOG1",
									"source": 5
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5939,
									"end": 6219,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 422,
									"end": 606,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 422,
									"end": 606,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 288,
									"end": 800,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 288,
									"end": 800,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 288,
									"end": 800,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 800,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 800,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 800,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 288,
									"end": 800,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 800,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "696"
								},
								{
									"begin": 288,
									"end": 800,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 800,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 800,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bcfac9a2f873366c36f2b91f3bf1a0987d369eab1202f288db73c1d0d13f58dc64736f6c63430008150033",
									".code": [
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "52D1902D"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "52D1902D"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "8129FC1C"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "6661ABD"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "3659CFE6"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "371303C0"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "4F1EF286"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 288,
											"end": 800,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 418,
											"end": 438,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 418,
											"end": 438,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3387,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 746,
											"end": 798,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 746,
											"end": 798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 746,
											"end": 798,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 746,
											"end": 798,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 746,
											"end": 798,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 746,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 746,
											"end": 798,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 746,
											"end": 798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 798,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 746,
											"end": 798,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 746,
											"end": 798,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 746,
											"end": 798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 746,
											"end": 798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 746,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 746,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 746,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3901,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3901,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3006,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2064,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 504,
											"end": 612,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 504,
											"end": 612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 504,
											"end": 612,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 504,
											"end": 612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 504,
											"end": 612,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 504,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 504,
											"end": 612,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 504,
											"end": 612,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 504,
											"end": 612,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 504,
											"end": 612,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 504,
											"end": 612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 504,
											"end": 612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 504,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 504,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 504,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2076,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2076,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1879,
											"end": 2082,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "696"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1893,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1873,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "696"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1608,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1963,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3468,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3486,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3468,
											"end": 3485,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3468,
											"end": 3504,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3468,
											"end": 3504,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3468,
											"end": 3504,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3567,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3514,
											"end": 3575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3553,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3514,
											"end": 3575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3514,
											"end": 3575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 746,
											"end": 798,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 746,
											"end": 798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 784,
											"end": 789,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 784,
											"end": 791,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 784,
											"end": 791,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 784,
											"end": 791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 784,
											"end": 789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 784,
											"end": 791,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 784,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 784,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 784,
											"end": 791,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 784,
											"end": 791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 784,
											"end": 791,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 784,
											"end": 791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 784,
											"end": 791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 784,
											"end": 791,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 784,
											"end": 791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 746,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "696"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1893,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1873,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "696"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1608,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1963,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4034,
											"end": 4051,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4033,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4016,
											"end": 4052,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4052,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4016,
											"end": 4052,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4084,
											"end": 4101,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4103,
											"end": 4107,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4109,
											"end": 4113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4062,
											"end": 4083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 4062,
											"end": 4114,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4114,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4062,
											"end": 4114,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 4121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 4121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2328,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2333,
											"end": 2339,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "696"
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3352,
											"end": 3354,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3355,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3391,
											"end": 3393,
											"name": "PUSH",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3364,
											"end": 3394,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3430,
											"end": 3464,
											"name": "PUSH",
											"source": 11,
											"value": "555550535570677261646561626C653A206D757374206E6F742062652063616C"
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3403,
											"end": 3465,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3501,
											"end": 3527,
											"name": "PUSH",
											"source": 11,
											"value": "6C6564207468726F7567682064656C656761746563616C6C0000000000000000"
										},
										{
											"begin": 3481,
											"end": 3499,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3481,
											"end": 3499,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3499,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3474,
											"end": 3528,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3545,
											"end": 3564,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 3545,
											"end": 3564,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3150,
											"end": 3570,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2155,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2128,
											"end": 2158,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 504,
											"end": 612,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 504,
											"end": 612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3777,
											"end": 3779,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3759,
											"end": 3780,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "PUSH",
											"source": 11,
											"value": "2E"
										},
										{
											"begin": 3796,
											"end": 3814,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3796,
											"end": 3814,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3796,
											"end": 3814,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3789,
											"end": 3819,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3855,
											"end": 3889,
											"name": "PUSH",
											"source": 11,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3828,
											"end": 3890,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3899,
											"end": 3943,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3960,
											"end": 3979,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 3960,
											"end": 3979,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3575,
											"end": 3985,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 555,
											"end": 571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 555,
											"end": 569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 555,
											"end": 571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 555,
											"end": 571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 555,
											"end": 571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 581,
											"end": 605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 581,
											"end": 603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 581,
											"end": 605,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 581,
											"end": 605,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 581,
											"end": 605,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4142,
											"end": 4178,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4142,
											"end": 4178,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 5,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4132,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4115,
											"end": 4133,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 504,
											"end": 612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4393,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4373,
											"end": 4394,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4430,
											"end": 4432,
											"name": "PUSH",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 4410,
											"end": 4428,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4410,
											"end": 4428,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4403,
											"end": 4433,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4469,
											"end": 4503,
											"name": "PUSH",
											"source": 11,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4449,
											"end": 4467,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4449,
											"end": 4467,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4449,
											"end": 4467,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4442,
											"end": 4504,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4520,
											"end": 4538,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4520,
											"end": 4538,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4520,
											"end": 4538,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4513,
											"end": 4549,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4566,
											"end": 4585,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4566,
											"end": 4585,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4189,
											"end": 4591,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2477,
											"end": 2505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2496,
											"end": 2504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2477,
											"end": 2495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2477,
											"end": 2505,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 618,
											"end": 736,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 618,
											"end": 736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 3764,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2820,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143"
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3236,
											"end": 3295,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3311,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3330,
											"end": 3347,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3311,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3311,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3311,
											"end": 3348,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3311,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 3764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 3764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 3764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 3764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3232,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3429,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3383,
											"end": 3444,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3444,
											"name": "PUSH",
											"source": 3,
											"value": "52D1902D"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3383,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3383,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3379,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3379,
											"end": 3681,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4987,
											"end": 4989,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4969,
											"end": 4990,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 11,
											"value": "2E"
										},
										{
											"begin": 5006,
											"end": 5024,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5006,
											"end": 5024,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5024,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4999,
											"end": 5029,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5065,
											"end": 5099,
											"name": "PUSH",
											"source": 11,
											"value": "45524331393637557067726164653A206E657720696D706C656D656E74617469"
										},
										{
											"begin": 5045,
											"end": 5063,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5045,
											"end": 5063,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5045,
											"end": 5063,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5038,
											"end": 5100,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F6E206973206E6F742055555053"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5109,
											"end": 5153,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5170,
											"end": 5189,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 5170,
											"end": 5189,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4785,
											"end": 5195,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3379,
											"end": 3681,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3379,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3496,
											"end": 3524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3496,
											"end": 3524,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5384,
											"end": 5405,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5441,
											"end": 5443,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5414,
											"end": 5444,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5480,
											"end": 5514,
											"name": "PUSH",
											"source": 11,
											"value": "45524331393637557067726164653A20756E737570706F727465642070726F78"
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5478,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5453,
											"end": 5515,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A58589B1955555251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5531,
											"end": 5549,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5531,
											"end": 5549,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5531,
											"end": 5549,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5524,
											"end": 5563,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5200,
											"end": 5605,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3488,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3694,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3712,
											"end": 3729,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3737,
											"end": 3746,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3694,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3694,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5812,
											"end": 5814,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5815,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5794,
											"end": 5815,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5794,
											"end": 5815,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5831,
											"end": 5849,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5831,
											"end": 5849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5831,
											"end": 5849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5824,
											"end": 5854,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5890,
											"end": 5924,
											"name": "PUSH",
											"source": 11,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5870,
											"end": 5888,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5870,
											"end": 5888,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5870,
											"end": 5888,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5863,
											"end": 5925,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5960,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5942,
											"end": 5960,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5610,
											"end": 5966,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2739,
											"end": 2755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1065,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1065,
											"end": 1089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1065,
											"end": 1091,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1109,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1042,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1980,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1699,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6567,
											"end": 6588,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6624,
											"end": 6626,
											"name": "PUSH",
											"source": 11,
											"value": "2D"
										},
										{
											"begin": 6604,
											"end": 6622,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6604,
											"end": 6622,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6604,
											"end": 6622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6597,
											"end": 6627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6663,
											"end": 6697,
											"name": "PUSH",
											"source": 11,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6643,
											"end": 6661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6636,
											"end": 6698,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD08184818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6714,
											"end": 6732,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6714,
											"end": 6732,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6714,
											"end": 6732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6707,
											"end": 6750,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 6383,
											"end": 6792,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1772,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1973,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1699,
											"end": 1980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2648,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2372,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2491,
											"end": 2508,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2480,
											"end": 2509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2509,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2480,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2527,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2523,
											"end": 2534,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2523,
											"end": 2538,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2542,
											"end": 2551,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2523,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2519,
											"end": 2642,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2607,
											"end": 2624,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2567,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2631,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2567,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1176,
											"end": 1208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2238,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2086,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2171,
											"end": 2188,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2152,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2152,
											"end": 2189,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2152,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 3,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2231,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6780,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6828,
											"end": 6832,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH data",
											"source": 7,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 6799,
											"end": 6876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6792,
											"end": 6876,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6685,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7210,
											"end": 7222,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7235,
											"end": 7247,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7272,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7282,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7276,
											"end": 7295,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7300,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 7276,
											"end": 7301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DELEGATECALL",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7318,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 7345,
											"end": 7351,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7360,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7362,
											"end": 7372,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7386,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7318,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 7318,
											"end": 7387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7318,
											"end": 7387,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 7318,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7311,
											"end": 7387,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7069,
											"end": 7394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7862,
											"end": 7874,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7890,
											"end": 7897,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7927,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7934,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 7939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7917,
											"end": 7939,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7548,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7585,
											"end": 7587,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7565,
											"end": 7583,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7558,
											"end": 7588,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7624,
											"end": 7655,
											"name": "PUSH",
											"source": 11,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 7604,
											"end": 7622,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 7604,
											"end": 7622,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7604,
											"end": 7622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7597,
											"end": 7656,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7673,
											"end": 7691,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7673,
											"end": 7691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 7344,
											"end": 7697,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8219,
											"end": 8229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 8268,
											"end": 8278,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8280,
											"end": 8292,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 8260,
											"end": 8293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 9372,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 8832,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8991,
											"end": 9008,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8991,
											"end": 9008,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8991,
											"end": 9012,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9219,
											"end": 9229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9230,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9275,
											"end": 9290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9262,
											"end": 9272,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9258,
											"end": 9260,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9254,
											"end": 9273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9291,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9342,
											"end": 9354,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 9335,
											"end": 9355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 369,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 196,
											"end": 369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 264,
											"end": 284,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 284,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 344,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 313,
											"end": 344,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 303,
											"end": 345,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 303,
											"end": 345,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 293,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 359,
											"end": 360,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 357,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 349,
											"end": 361,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 293,
											"end": 363,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 196,
											"end": 369,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 196,
											"end": 369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 374,
											"end": 560,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 433,
											"end": 439,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 483,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 465,
											"end": 472,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 461,
											"end": 484,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 457,
											"end": 489,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 454,
											"end": 506,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 454,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 454,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 502,
											"end": 503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 500,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 492,
											"end": 504,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 454,
											"end": 506,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 454,
											"end": 506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 525,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 544,
											"end": 553,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 525,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 525,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 565,
											"end": 692,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 565,
											"end": 692,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 626,
											"end": 636,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 621,
											"end": 624,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 617,
											"end": 637,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 614,
											"end": 615,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 638,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 657,
											"end": 661,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 654,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 662,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 681,
											"end": 685,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 678,
											"end": 679,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 686,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 697,
											"end": 1692,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 697,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 774,
											"end": 780,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 788,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 835,
											"end": 837,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 832,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 814,
											"end": 821,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 810,
											"end": 833,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 806,
											"end": 838,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 803,
											"end": 855,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 803,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 803,
											"end": 855,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 851,
											"end": 852,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 849,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 841,
											"end": 853,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 803,
											"end": 855,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 803,
											"end": 855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 874,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 874,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 874,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 874,
											"end": 903,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 874,
											"end": 903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 864,
											"end": 903,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 864,
											"end": 903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 954,
											"end": 956,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 943,
											"end": 952,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 939,
											"end": 957,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 926,
											"end": 958,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 977,
											"end": 995,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1020,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1021,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1004,
											"end": 1038,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1004,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 1004,
											"end": 1038,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1035,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1032,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1004,
											"end": 1038,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 1004,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1079,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1079,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1114,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1106,
											"end": 1108,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1102,
											"end": 1115,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1098,
											"end": 1125,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 1088,
											"end": 1143,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1139,
											"end": 1140,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1129,
											"end": 1141,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1143,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 1088,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1178,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1199,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1190,
											"end": 1200,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1223,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 1187,
											"end": 1223,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1203,
											"end": 1221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 1203,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1278,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1272,
											"end": 1281,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1350,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1350,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1328,
											"end": 1350,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1354,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 1324,
											"end": 1355,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1320,
											"end": 1360,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1308,
											"end": 1361,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1308,
											"end": 1361,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1308,
											"end": 1361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1396,
											"end": 1418,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1396,
											"end": 1418,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1396,
											"end": 1418,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1373,
											"end": 1419,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1370,
											"end": 1442,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1370,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 1370,
											"end": 1442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1422,
											"end": 1440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 1422,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1462,
											"end": 1472,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1458,
											"end": 1460,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1473,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1497,
											"end": 1499,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1489,
											"end": 1495,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1544,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1532,
											"end": 1534,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1529,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1523,
											"end": 1525,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1519,
											"end": 1530,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1515,
											"end": 1535,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1512,
											"end": 1545,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1562,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 1509,
											"end": 1562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1548,
											"end": 1560,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1509,
											"end": 1562,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 1509,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1614,
											"end": 1616,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1609,
											"end": 1611,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1607,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1612,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1598,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1594,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1599,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1571,
											"end": 1617,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 1660,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1656,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1651,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1641,
											"end": 1647,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1637,
											"end": 1652,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1633,
											"end": 1657,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1626,
											"end": 1661,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1686,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1686,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1686,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1686,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1686,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1686,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1686,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 697,
											"end": 1692,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 697,
											"end": 1692,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 697,
											"end": 1692,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 697,
											"end": 1692,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 697,
											"end": 1692,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 697,
											"end": 1692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2495,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 2087,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2289,
											"end": 2291,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2328,
											"end": 2330,
											"name": "PUSH",
											"source": 11,
											"value": "2C"
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2301,
											"end": 2331,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2401,
											"name": "PUSH",
											"source": 11,
											"value": "46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820"
										},
										{
											"begin": 2362,
											"end": 2364,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2340,
											"end": 2402,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19195B1959D85D1958D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2433,
											"end": 2435,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2418,
											"end": 2436,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2436,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2453,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2488,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2908,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2500,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2702,
											"end": 2704,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2684,
											"end": 2705,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2705,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2705,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2741,
											"end": 2743,
											"name": "PUSH",
											"source": 11,
											"value": "2C"
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2744,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2780,
											"end": 2814,
											"name": "PUSH",
											"source": 11,
											"value": "46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820"
										},
										{
											"begin": 2775,
											"end": 2777,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2815,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6163746976652070726F7879"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2846,
											"end": 2848,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2831,
											"end": 2849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2831,
											"end": 2849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2824,
											"end": 2866,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2898,
											"end": 2901,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2883,
											"end": 2902,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2883,
											"end": 2902,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2913,
											"end": 3145,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2913,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2952,
											"end": 2955,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 2990,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2973,
											"end": 2990,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2973,
											"end": 2990,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2970,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 2970,
											"end": 3110,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3032,
											"end": 3042,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 3027,
											"end": 3030,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3023,
											"end": 3043,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3020,
											"end": 3021,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3044,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3067,
											"end": 3071,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 3064,
											"end": 3065,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3057,
											"end": 3072,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3095,
											"end": 3099,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3092,
											"end": 3093,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3100,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2970,
											"end": 3110,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 2970,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3137,
											"end": 3138,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2913,
											"end": 3145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4596,
											"end": 4780,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 4596,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4721,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4716,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4698,
											"end": 4705,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4694,
											"end": 4717,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4722,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4687,
											"end": 4739,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4687,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 4687,
											"end": 4739,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4735,
											"end": 4736,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4732,
											"end": 4733,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4687,
											"end": 4739,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 4687,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4758,
											"end": 4774,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4758,
											"end": 4774,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4596,
											"end": 4780,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4596,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5971,
											"end": 6378,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 5971,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6173,
											"end": 6175,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6155,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6176,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6176,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6212,
											"end": 6214,
											"name": "PUSH",
											"source": 11,
											"value": "2B"
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6185,
											"end": 6215,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "PUSH",
											"source": 11,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6224,
											"end": 6286,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6317,
											"end": 6319,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6295,
											"end": 6336,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6368,
											"end": 6371,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 6353,
											"end": 6372,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6353,
											"end": 6372,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5971,
											"end": 6378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6797,
											"end": 7047,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 6797,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6882,
											"end": 6883,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6892,
											"end": 7005,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 6892,
											"end": 7005,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6912,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6903,
											"end": 6904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6913,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 7005,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 6892,
											"end": 7005,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6982,
											"end": 6993,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6982,
											"end": 6993,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6982,
											"end": 6993,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6963,
											"end": 6974,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6963,
											"end": 6974,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6963,
											"end": 6974,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6956,
											"end": 6995,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6928,
											"end": 6930,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6921,
											"end": 6931,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 6892,
											"end": 7005,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6892,
											"end": 7005,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 6892,
											"end": 7005,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7039,
											"end": 7040,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7037,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7021,
											"end": 7037,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7014,
											"end": 7041,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6797,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7339,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 7052,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7181,
											"end": 7184,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7219,
											"end": 7225,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7213,
											"end": 7226,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7235,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 7294,
											"end": 7300,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7289,
											"end": 7292,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7282,
											"end": 7286,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7274,
											"end": 7280,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7270,
											"end": 7287,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7235,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 7235,
											"end": 7301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7235,
											"end": 7301,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 7235,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7317,
											"end": 7333,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7317,
											"end": 7333,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7317,
											"end": 7333,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7317,
											"end": 7333,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7317,
											"end": 7333,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7052,
											"end": 7339,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7052,
											"end": 7339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7702,
											"end": 8098,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 7702,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7851,
											"end": 7853,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7849,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7833,
											"end": 7854,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7818,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7883,
											"end": 7889,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7877,
											"end": 7890,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7926,
											"end": 7932,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7921,
											"end": 7923,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7910,
											"end": 7919,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7906,
											"end": 7924,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7899,
											"end": 7933,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7942,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 8014,
											"end": 8020,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8009,
											"end": 8011,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7998,
											"end": 8007,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8012,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7989,
											"end": 7991,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7987,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7977,
											"end": 7992,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7942,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 7942,
											"end": 8021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7942,
											"end": 8021,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 7942,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8082,
											"end": 8084,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 8061,
											"end": 8076,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8057,
											"end": 8086,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8042,
											"end": 8087,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8042,
											"end": 8087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8042,
											"end": 8087,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8042,
											"end": 8087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8089,
											"end": 8091,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8038,
											"end": 8092,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8038,
											"end": 8092,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7702,
											"end": 8098,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7702,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"erc1967/UUPS-Proxy-V1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"count()": "06661abd",
							"inc()": "371303c0",
							"initialize()": "8129fc1c",
							"owner()": "8da5cb5b",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"count\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc1967/UUPS-Proxy-V1.sol\":\"MyToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"erc1967/UUPS-Proxy-V1.sol\":{\"keccak256\":\"0x6b7bf08467a8ac65f2d944254037eb7e369702a8f3fc883df466e8ca4fe181fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5af1da557fcd49f752a076e47ce0be67ab1ffd4c2c3f783438d4f7e3632afd\",\"dweb:/ipfs/QmdzLtYn635pAzhyzLpZV3f1tpxt4Jd3MmM7ibFfB56USq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 503,
								"contract": "erc1967/UUPS-Proxy-V1.sol:MyToken",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 506,
								"contract": "erc1967/UUPS-Proxy-V1.sol:MyToken",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1172,
								"contract": "erc1967/UUPS-Proxy-V1.sol:MyToken",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "erc1967/UUPS-Proxy-V1.sol:MyToken",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "erc1967/UUPS-Proxy-V1.sol:MyToken",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 485,
								"contract": "erc1967/UUPS-Proxy-V1.sol:MyToken",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 800,
								"contract": "erc1967/UUPS-Proxy-V1.sol:MyToken",
								"label": "__gap",
								"offset": 0,
								"slot": "151",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1297,
								"contract": "erc1967/UUPS-Proxy-V1.sol:MyToken",
								"label": "count",
								"offset": 0,
								"slot": "201",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1131
						],
						"ContextUpgradeable": [
							1173
						],
						"Initializable": [
							665
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 1174,
							"src": "127:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 666,
							"src": "169:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nameLocations": [
											"748:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 665,
										"src": "748:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"763:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "763:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								1173,
								665
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "788:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 16,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "844:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "875:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:0"
									},
									"src": "817:84:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1055:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1065:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 19,
												"name": "onlyInitializing",
												"nameLocations": [
													"1038:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 610,
												"src": "1038:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:0"
									},
									"scope": 131,
									"src": "1003:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1166:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 32,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "1195:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "1176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyInitializing",
												"nameLocations": [
													"1149:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 610,
												"src": "1149:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:0"
									},
									"scope": 131,
									"src": "1104:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 40,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 45,
									"name": "onlyOwner",
									"nameLocation": "1312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:0"
									},
									"src": "1303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1496:30:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "1506:13:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:0"
									},
									"scope": 131,
									"src": "1441:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1644:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1662:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 61,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "1673:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:0"
									},
									"scope": 131,
									"src": "1599:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "2118:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2155:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 75,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2147:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2147:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 74,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2128:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "2128:30:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1735:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 72,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 71,
												"name": "onlyOwner",
												"nameLocations": [
													"2108:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2108:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2108:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2073:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2118:0:0"
									},
									"scope": 131,
									"src": "2064:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2384:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 91,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2402:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2422:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2414:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 92,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2414:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2414:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2402:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2394:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2394:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2394:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2496:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 100,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2477:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2477:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2477:28:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2171:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2374:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2374:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2323:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2349:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2341:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:18:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:0:0"
									},
									"scope": 131,
									"src": "2314:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2729:124:0",
										"statements": [
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2747:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "2739:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 111,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2739:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"id": 113,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2758:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2739:25:0"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2774:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 116,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2783:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2774:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2774:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 120,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2827:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 121,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2837:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 119,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2806:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2806:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "2801:45:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2518:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2675:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2702:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2694:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:18:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:0"
									},
									"scope": 131,
									"src": "2666:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2859:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 130,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3138:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "3118:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 127,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3118:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 129,
										"length": {
											"hexValue": "3439",
											"id": 128,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3126:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3118:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 132,
							"src": "708:2438:0",
							"usedErrors": [],
							"usedEvents": [
								16,
								511
							]
						}
					],
					"src": "102:3045:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
					"exportedSymbols": {
						"IERC1967Upgradeable": [
							152
						]
					},
					"id": 153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 134,
								"nodeType": "StructuredDocumentation",
								"src": "132:133:1",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"
							},
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "IERC1967Upgradeable",
							"nameLocation": "276:19:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "302:68:1",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 139,
									"name": "Upgraded",
									"nameLocation": "381:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "406:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "390:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:32:1"
									},
									"src": "375:47:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "428:67:1",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 146,
									"name": "AdminChanged",
									"nameLocation": "506:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "527:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "519:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "550:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "542:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:41:1"
									},
									"src": "500:60:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "566:59:1",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 151,
									"name": "BeaconUpgraded",
									"nameLocation": "636:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "667:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "651:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:24:1"
									},
									"src": "630:45:1"
								}
							],
							"scope": 153,
							"src": "266:411:1",
							"usedErrors": [],
							"usedEvents": [
								139,
								146,
								151
							]
						}
					],
					"src": "107:571:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
					"exportedSymbols": {
						"IERC1822ProxiableUpgradeable": [
							162
						]
					},
					"id": 163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822ProxiableUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 155,
								"nodeType": "StructuredDocumentation",
								"src": "138:203:2",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 162,
							"linearizedBaseContracts": [
								162
							],
							"name": "IERC1822ProxiableUpgradeable",
							"nameLocation": "352:28:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "387:438:2",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "839:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:2:2"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "878:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 158,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:2"
									},
									"scope": 162,
									"src": "830:57:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 163,
							"src": "342:547:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:777:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1131
						],
						"ERC1967UpgradeUpgradeable": [
							486
						],
						"IBeaconUpgradeable": [
							496
						],
						"IERC1822ProxiableUpgradeable": [
							162
						],
						"IERC1967Upgradeable": [
							152
						],
						"Initializable": [
							665
						],
						"StorageSlotUpgradeable": [
							1283
						]
					},
					"id": 487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
							"file": "../beacon/IBeaconUpgradeable.sol",
							"id": 165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 487,
							"sourceUnit": 497,
							"src": "141:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
							"file": "../../interfaces/IERC1967Upgradeable.sol",
							"id": 166,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 487,
							"sourceUnit": 153,
							"src": "184:50:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 167,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 487,
							"sourceUnit": 163,
							"src": "235:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 487,
							"sourceUnit": 1132,
							"src": "292:44:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
							"file": "../../utils/StorageSlotUpgradeable.sol",
							"id": 169,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 487,
							"sourceUnit": 1284,
							"src": "337:48:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../utils/Initializable.sol",
							"id": 170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 487,
							"sourceUnit": 666,
							"src": "386:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 172,
										"name": "Initializable",
										"nameLocations": [
											"656:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 665,
										"src": "656:13:3"
									},
									"id": 173,
									"nodeType": "InheritanceSpecifier",
									"src": "656:13:3"
								},
								{
									"baseName": {
										"id": 174,
										"name": "IERC1967Upgradeable",
										"nameLocations": [
											"671:19:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 152,
										"src": "671:19:3"
									},
									"id": 175,
									"nodeType": "InheritanceSpecifier",
									"src": "671:19:3"
								}
							],
							"canonicalName": "ERC1967UpgradeUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "424:184:3",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"
							},
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486,
								152,
								665
							],
							"name": "ERC1967UpgradeUpgradeable",
							"nameLocation": "627:25:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "756:7:3",
										"statements": []
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 177,
												"name": "onlyInitializing",
												"nameLocations": [
													"739:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 610,
												"src": "739:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "739:16:3"
										}
									],
									"name": "__ERC1967Upgrade_init",
									"nameLocation": "706:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:2:3"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:0:3"
									},
									"scope": 486,
									"src": "697:66:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "838:7:3",
										"statements": []
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 184,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 183,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 610,
												"src": "821:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:3"
										}
									],
									"name": "__ERC1967Upgrade_init_unchained",
									"nameLocation": "778:31:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:3"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:3"
									},
									"scope": 486,
									"src": "769:76:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 190,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "954:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 486,
									"src": "929:108:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 188,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "929:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 189,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "971:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1044:214:3",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 194,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "1289:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 486,
									"src": "1263:115:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 192,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1263:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 193,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1312:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "1519:89:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 202,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1574:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 200,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "1536:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1283_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1559:14:3",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1205,
															"src": "1536:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1179_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1536:59:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1179_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1596:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1178,
													"src": "1536:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 199,
												"id": 205,
												"nodeType": "Return",
												"src": "1529:72:3"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "1385:67:3",
										"text": " @dev Returns the current implementation address."
									},
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1466:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1484:2:3"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1510:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1510:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1509:9:3"
									},
									"scope": 486,
									"src": "1457:151:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "1762:218:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 216,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "1810:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 214,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "1780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1131_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1799:10:3",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 819,
																"src": "1780:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1780:48:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1830:47:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1772:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1772:106:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "1772:106:3"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 224,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "1926:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 221,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "1888:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1283_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1911:14:3",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1205,
																"src": "1888:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1179_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1888:59:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1179_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1948:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1178,
														"src": "1888:65:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 227,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "1956:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1888:85:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "1888:85:3"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "1614:80:3",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1708:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1735:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1727:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:27:3"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1762:0:3"
									},
									"scope": 486,
									"src": "1699:281:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "2142:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "2171:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 237,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "2152:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2152:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "2152:37:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 242,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "2213:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 241,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "2204:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2204:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "EmitStatement",
												"src": "2199:32:3"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "1986:95:3",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "2095:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2114:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2106:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2106:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2105:27:3"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2142:0:3"
									},
									"scope": 486,
									"src": "2086:152:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "2470:178:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 257,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "2491:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 256,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2480:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "2480:29:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 260,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "2523:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2528:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2523:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2537:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2523:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 264,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "2542:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2523:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 274,
												"nodeType": "IfStatement",
												"src": "2519:123:3",
												"trueBody": {
													"id": 273,
													"nodeType": "Block",
													"src": "2553:89:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 269,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "2607:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 270,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 251,
																		"src": "2626:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 266,
																		"name": "AddressUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "2567:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1131_$",
																			"typeString": "type(library AddressUpgradeable)"
																		}
																	},
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2586:20:3",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1018,
																	"src": "2567:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2567:64:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 272,
															"nodeType": "ExpressionStatement",
															"src": "2567:64:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "2244:123:3",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2381:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2407:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2399:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2439:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2426:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 250,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2426:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2450:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2445:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2445:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:62:3"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:3"
									},
									"scope": 486,
									"src": "2372:276:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2922:842:3",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 288,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "3274:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 286,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "3236:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1283_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3259:14:3",
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1216,
															"src": "3236:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1182_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3236:53:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$1182_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.BooleanSlot storage pointer"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3290:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1181,
													"src": "3236:59:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 326,
													"nodeType": "Block",
													"src": "3365:393:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 311,
																		"nodeType": "Block",
																		"src": "3470:115:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 307,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 305,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 302,
																								"src": "3496:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 306,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 194,
																								"src": "3504:20:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "3496:28:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 308,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3526:43:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 304,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "3488:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3488:82:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 310,
																				"nodeType": "ExpressionStatement",
																				"src": "3488:82:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 312,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 303,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 302,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "3464:4:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 312,
																				"src": "3456:12:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 301,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3456:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3455:14:3"
																	},
																	"src": "3447:138:3"
																},
																{
																	"block": {
																		"id": 317,
																		"nodeType": "Block",
																		"src": "3592:89:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 314,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3617:48:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 313,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3610:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 315,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3610:56:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 316,
																				"nodeType": "ExpressionStatement",
																				"src": "3610:56:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 318,
																	"nodeType": "TryCatchClause",
																	"src": "3586:95:3"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 297,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "3412:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 296,
																			"name": "IERC1822ProxiableUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 162,
																			"src": "3383:28:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822ProxiableUpgradeable_$162_$",
																				"typeString": "type(contract IERC1822ProxiableUpgradeable)"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3383:47:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822ProxiableUpgradeable_$162",
																			"typeString": "contract IERC1822ProxiableUpgradeable"
																		}
																	},
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3431:13:3",
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 161,
																	"src": "3383:61:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3383:63:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 319,
															"nodeType": "TryStatement",
															"src": "3379:302:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 321,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 279,
																		"src": "3712:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 322,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "3731:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 323,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "3737:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 320,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "3694:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3694:53:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 325,
															"nodeType": "ExpressionStatement",
															"src": "3694:53:3"
														}
													]
												},
												"id": 327,
												"nodeType": "IfStatement",
												"src": "3232:526:3",
												"trueBody": {
													"id": 295,
													"nodeType": "Block",
													"src": "3297:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 279,
																		"src": "3330:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 291,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "3311:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3311:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "3311:37:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "2654:161:3",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "2829:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2859:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2851:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2851:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2891:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2878:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2878:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2902:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2897:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2897:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2850:62:3"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2922:0:3"
									},
									"scope": 486,
									"src": "2820:944:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "3770:189:3",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 333,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "3990:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 486,
									"src": "3964:106:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 331,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3964:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 332,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4004:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "4185:80:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 341,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4240:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 339,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "4202:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1283_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4225:14:3",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1205,
															"src": "4202:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1179_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4202:50:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1179_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4253:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1178,
													"src": "4202:56:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 338,
												"id": 344,
												"nodeType": "Return",
												"src": "4195:63:3"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "4077:50:3",
										"text": " @dev Returns the current admin."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "4141:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4150:2:3"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4176:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4176:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4175:9:3"
									},
									"scope": 486,
									"src": "4132:133:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "4392:167:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 353,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "4410:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4430:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4422:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 354,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4422:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4422:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4410:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4434:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4402:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4402:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "4402:73:3"
											},
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 365,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "4523:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 362,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "4485:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1283_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4508:14:3",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1205,
																"src": "4485:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1179_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4485:50:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1179_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4536:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1178,
														"src": "4485:56:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 368,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "4544:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4485:67:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "4485:67:3"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "4271:71:3",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4356:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4374:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "4366:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:18:3"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4392:0:3"
									},
									"scope": 486,
									"src": "4347:212:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "4719:86:3",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 379,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "4747:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4747:11:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "4760:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 378,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4734:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4734:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "EmitStatement",
												"src": "4729:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "4789:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 384,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "4779:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4779:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "4779:19:3"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "4565:100:3",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "4679:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4700:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "4692:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4691:18:3"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4719:0:3"
									},
									"scope": 486,
									"src": "4670:135:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "4811:232:3",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 393,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "5074:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 486,
									"src": "5048:107:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 391,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5048:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 392,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5089:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "5272:81:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 401,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "5327:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 399,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "5289:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1283_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5312:14:3",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1205,
															"src": "5289:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1179_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5289:51:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1179_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5341:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1178,
													"src": "5289:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 398,
												"id": 404,
												"nodeType": "Return",
												"src": "5282:64:3"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "5162:51:3",
										"text": " @dev Returns the current beacon."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "5227:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5237:2:3"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5263:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5263:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5262:9:3"
									},
									"scope": 486,
									"src": "5218:135:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "5482:368:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 415,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "5530:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 413,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "5500:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1131_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5519:10:3",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 819,
																"src": "5500:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5500:40:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5542:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5492:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5492:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "5492:90:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 424,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 409,
																					"src": "5662:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 423,
																				"name": "IBeaconUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 496,
																				"src": "5643:18:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$496_$",
																					"typeString": "type(contract IBeaconUpgradeable)"
																				}
																			},
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5643:29:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeaconUpgradeable_$496",
																				"typeString": "contract IBeaconUpgradeable"
																			}
																		},
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5673:14:3",
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 495,
																		"src": "5643:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5643:46:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 421,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "5613:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1131_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5632:10:3",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 819,
																"src": "5613:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5613:77:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5704:50:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5592:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5592:172:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "5592:172:3"
											},
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 435,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "5812:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 432,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "5774:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1283_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5797:14:3",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1205,
																"src": "5774:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1179_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5774:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1179_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1178,
														"src": "5774:57:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 438,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "5834:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5774:69:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "5774:69:3"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "5359:71:3",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5444:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5463:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "5455:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5454:19:3"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5482:0:3"
									},
									"scope": 486,
									"src": "5435:415:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "6249:239:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "6270:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 452,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "6259:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6259:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "6259:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 457,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "6310:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 456,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "6295:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6295:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "EmitStatement",
												"src": "6290:30:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 460,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "6334:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6339:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6334:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6348:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6334:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 464,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "6353:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6334:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "6330:152:3",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "6364:118:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 470,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 445,
																						"src": "6437:9:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 469,
																					"name": "IBeaconUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 496,
																					"src": "6418:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$496_$",
																						"typeString": "type(contract IBeaconUpgradeable)"
																					}
																				},
																				"id": 471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6418:29:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeaconUpgradeable_$496",
																					"typeString": "contract IBeaconUpgradeable"
																				}
																			},
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6448:14:3",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 495,
																			"src": "6418:44:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6418:46:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 474,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "6466:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 466,
																		"name": "AddressUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "6378:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1131_$",
																			"typeString": "type(library AddressUpgradeable)"
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6397:20:3",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1018,
																	"src": "6378:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6378:93:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "6378:93:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "5856:292:3",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "6162:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6194:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "6186:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6218:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "6205:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6205:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "6229:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "6224:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6224:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:54:3"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6249:0:3"
									},
									"scope": 486,
									"src": "6153:335:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "6494:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 485,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "6773:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 486,
									"src": "6753:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 482,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6753:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 484,
										"length": {
											"hexValue": "3530",
											"id": 483,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6761:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "6753:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 487,
							"src": "609:6172:3",
							"usedErrors": [],
							"usedEvents": [
								139,
								146,
								151,
								511
							]
						}
					],
					"src": "116:6666:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
					"exportedSymbols": {
						"IBeaconUpgradeable": [
							496
						]
					},
					"id": 497,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeaconUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 489,
								"nodeType": "StructuredDocumentation",
								"src": "118:79:4",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 496,
							"linearizedBaseContracts": [
								496
							],
							"name": "IBeaconUpgradeable",
							"nameLocation": "208:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "233:162:4",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "409:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:4"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "449:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:4"
									},
									"scope": 496,
									"src": "400:58:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 497,
							"src": "198:262:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "93:368:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1131
						],
						"Initializable": [
							665
						]
					},
					"id": 666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 498,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 499,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 666,
							"sourceUnit": 1132,
							"src": "138:44:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 500,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:5",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 665,
							"linearizedBaseContracts": [
								665
							],
							"name": "Initializable",
							"nameLocation": "2412:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:5",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 503,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 665,
									"src": "2546:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 502,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:5",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 506,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 665,
									"src": "2675:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 505,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:5",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 511,
									"name": "Initialized",
									"nameLocation": "2809:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "2821:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 508,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:5"
									},
									"src": "2803:33:5"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "3269:483:5",
										"statements": [
											{
												"assignments": [
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "3279:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 514,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 518,
												"initialValue": {
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:5",
													"subExpression": {
														"id": 516,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "3302:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 520,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 515,
																			"src": "3347:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 521,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 503,
																				"src": "3365:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 525,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:5",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 530,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$665",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$665",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 529,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 528,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:5",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 531,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 526,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1131,
																						"src": "3388:18:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1131_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 527,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:5",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 819,
																					"src": "3388:29:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 532,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 534,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 503,
																				"src": "3436:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 535,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 538,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 519,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:5"
											},
											{
												"expression": {
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 543,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "3536:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:5"
											},
											{
												"condition": {
													"id": 547,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 515,
													"src": "3566:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 553,
												"nodeType": "IfStatement",
												"src": "3562:65:5",
												"trueBody": {
													"id": 552,
													"nodeType": "Block",
													"src": "3582:45:5",
													"statements": [
														{
															"expression": {
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 548,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "3596:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 551,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:5"
														}
													]
												}
											},
											{
												"id": 554,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:5"
											},
											{
												"condition": {
													"id": 555,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 515,
													"src": "3651:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 565,
												"nodeType": "IfStatement",
												"src": "3647:99:5",
												"trueBody": {
													"id": 564,
													"nodeType": "Block",
													"src": "3667:79:5",
													"statements": [
														{
															"expression": {
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 556,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "3681:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 560,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "3721:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 563,
															"nodeType": "EmitStatement",
															"src": "3716:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:5",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 567,
									"name": "initializer",
									"nameLocation": "3255:11:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:5"
									},
									"src": "3246:506:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "4863:255:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:5",
																"subExpression": {
																	"id": 573,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "4882:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 575,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "4899:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 576,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "4914:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:5"
											},
											{
												"expression": {
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 582,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "4982:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 583,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "4997:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:5"
											},
											{
												"expression": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 586,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "5014:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:5"
											},
											{
												"id": 590,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:5"
											},
											{
												"expression": {
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 591,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "5055:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 596,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "5103:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 595,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "5091:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "EmitStatement",
												"src": "5086:25:5"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:5",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 600,
									"name": "reinitializer",
									"nameLocation": "4834:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "4848:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 569,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:5"
									},
									"src": "4825:293:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "5356:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 604,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5374:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:5"
											},
											{
												"id": 608,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:5"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:5",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 610,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:5"
									},
									"src": "5328:125:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "5988:231:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:5",
															"subExpression": {
																"id": 615,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "6007:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 620,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "6078:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 622,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 621,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 644,
												"nodeType": "IfStatement",
												"src": "6074:139:5",
												"trueBody": {
													"id": 643,
													"nodeType": "Block",
													"src": "6111:102:5",
													"statements": [
														{
															"expression": {
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 627,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "6125:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 629,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:5",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 628,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:5",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 634,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 638,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 637,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:5",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 636,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:5",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 635,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "6174:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 642,
															"nodeType": "EmitStatement",
															"src": "6169:33:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:5",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:5"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:5"
									},
									"scope": 665,
									"src": "5939:280:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "6393:36:5",
										"statements": [
											{
												"expression": {
													"id": 652,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 503,
													"src": "6410:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 651,
												"id": 653,
												"nodeType": "Return",
												"src": "6403:19:5"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:5",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:5"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "6386:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 649,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:5"
									},
									"scope": 665,
									"src": "6329:100:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "6601:37:5",
										"statements": [
											{
												"expression": {
													"id": 661,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 506,
													"src": "6618:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 660,
												"id": 662,
												"nodeType": "Return",
												"src": "6611:20:5"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:5",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:5"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "6595:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 658,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:5"
									},
									"scope": 665,
									"src": "6545:93:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 666,
							"src": "2394:4246:5",
							"usedErrors": [],
							"usedEvents": [
								511
							]
						}
					],
					"src": "113:6528:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1131
						],
						"ERC1967UpgradeUpgradeable": [
							486
						],
						"IBeaconUpgradeable": [
							496
						],
						"IERC1822ProxiableUpgradeable": [
							162
						],
						"IERC1967Upgradeable": [
							152
						],
						"Initializable": [
							665
						],
						"StorageSlotUpgradeable": [
							1283
						],
						"UUPSUpgradeable": [
							801
						]
					},
					"id": 802,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 802,
							"sourceUnit": 163,
							"src": "140:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
							"file": "../ERC1967/ERC1967UpgradeUpgradeable.sol",
							"id": 669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 802,
							"sourceUnit": 487,
							"src": "197:50:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 670,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 802,
							"sourceUnit": 666,
							"src": "248:29:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 672,
										"name": "Initializable",
										"nameLocations": [
											"965:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 665,
										"src": "965:13:6"
									},
									"id": 673,
									"nodeType": "InheritanceSpecifier",
									"src": "965:13:6"
								},
								{
									"baseName": {
										"id": 674,
										"name": "IERC1822ProxiableUpgradeable",
										"nameLocations": [
											"980:28:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 162,
										"src": "980:28:6"
									},
									"id": 675,
									"nodeType": "InheritanceSpecifier",
									"src": "980:28:6"
								},
								{
									"baseName": {
										"id": 676,
										"name": "ERC1967UpgradeUpgradeable",
										"nameLocations": [
											"1010:25:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "1010:25:6"
									},
									"id": 677,
									"nodeType": "InheritanceSpecifier",
									"src": "1010:25:6"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 671,
								"nodeType": "StructuredDocumentation",
								"src": "279:648:6",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 801,
							"linearizedBaseContracts": [
								801,
								486,
								152,
								162,
								665
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "946:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "1102:7:6",
										"statements": []
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 679,
												"name": "onlyInitializing",
												"nameLocations": [
													"1085:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 610,
												"src": "1085:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1085:16:6"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "1051:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:2:6"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:6"
									},
									"scope": 801,
									"src": "1042:67:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "1185:7:6",
										"statements": []
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 686,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 685,
												"name": "onlyInitializing",
												"nameLocations": [
													"1168:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 610,
												"src": "1168:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1168:16:6"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "1124:32:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:2:6"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1185:0:6"
									},
									"scope": 801,
									"src": "1115:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "1197:87:6",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"
									},
									"id": 696,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1315:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 801,
									"src": "1289:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 691,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1289:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 694,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1332:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$801",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$801",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 693,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1324:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 692,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1324:7:6",
												"typeDescriptions": {}
											}
										},
										"id": 695,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1324:13:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "1863:205:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 702,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1889:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$801",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$801",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1881:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 700,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1881:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1881:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 704,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "1898:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1881:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1906:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															},
															"value": "Function must be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															}
														],
														"id": 699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1873:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1873:80:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "1873:80:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 710,
																	"name": "_getImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "1971:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1971:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 712,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "1995:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1971:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879",
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2003:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															},
															"value": "Function must be called through active proxy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															}
														],
														"id": 709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1963:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "1963:87:6"
											},
											{
												"id": 717,
												"nodeType": "PlaceholderStatement",
												"src": "2060:1:6"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1344:493:6",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 719,
									"name": "onlyProxy",
									"nameLocation": "1851:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:6"
									},
									"src": "1842:226:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "2298:120:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 725,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2324:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$801",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$801",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2316:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2316:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2316:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 727,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "2333:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2316:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															},
															"value": "UUPSUpgradeable: must not be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															}
														],
														"id": 722,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2308:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2308:92:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "2308:92:6"
											},
											{
												"id": 732,
												"nodeType": "PlaceholderStatement",
												"src": "2410:1:6"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "2074:195:6",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 734,
									"name": "notDelegated",
									"nameLocation": "2283:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2295:2:6"
									},
									"src": "2274:144:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										161
									],
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "3093:44:6",
										"statements": [
											{
												"expression": {
													"id": 743,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 194,
													"src": "3110:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 742,
												"id": 744,
												"nodeType": "Return",
												"src": "3103:27:6"
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "2424:577:6",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 739,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 738,
												"name": "notDelegated",
												"nameLocations": [
													"3062:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 734,
												"src": "3062:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3062:12:6"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3015:13:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 737,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3053:8:6"
									},
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:2:6"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3084:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 740,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3084:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:9:6"
									},
									"scope": 801,
									"src": "3006:131:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "3458:124:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "3486:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 754,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "3468:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3468:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "3468:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 759,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "3536:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3565:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "3555:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 760,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3559:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3555:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3569:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 758,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "3514:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3514:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "3514:61:6"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "3143:239:6",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "3659cfe6",
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 752,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 751,
												"name": "onlyProxy",
												"nameLocations": [
													"3448:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 719,
												"src": "3448:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3448:9:6"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "3396:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3414:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "3406:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3405:27:6"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3458:0:6"
									},
									"scope": 801,
									"src": "3387:195:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "4006:115:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 779,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "4034:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 778,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "4016:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4016:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "4016:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 783,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "4084:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 784,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "4103:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4109:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 782,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "4062:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4062:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "4062:52:6"
											}
										]
									},
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "3588:308:6",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 776,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 775,
												"name": "onlyProxy",
												"nameLocations": [
													"3996:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 719,
												"src": "3996:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3996:9:6"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "3910:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3935:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3927:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3927:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3967:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3954:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 772,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3954:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3926:46:6"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4006:0:6"
									},
									"scope": 801,
									"src": "3901:220:6",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "4127:397:6",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"
									},
									"id": 795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "4538:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4564:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "4556:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4556:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4555:27:6"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4599:0:6"
									},
									"scope": 801,
									"src": "4529:71:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "4606:254:6",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 800,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "4885:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 801,
									"src": "4865:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 797,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4865:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 799,
										"length": {
											"hexValue": "3530",
											"id": 798,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4873:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "4865:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 802,
							"src": "928:3965:6",
							"usedErrors": [],
							"usedEvents": [
								139,
								146,
								151,
								511
							]
						}
					],
					"src": "115:4779:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1131
						]
					},
					"id": 1132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 803,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 804,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1131,
							"linearizedBaseContracts": [
								1131
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "1489:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 812,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "1713:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 811,
												"id": 817,
												"nodeType": "Return",
												"src": "1706:30:7"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "1443:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:7"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "1483:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 809,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:7"
									},
									"scope": 1131,
									"src": "1423:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "2729:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 830,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1131",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1131",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 828,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 833,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "2772:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:7"
											},
											{
												"assignments": [
													839,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 852,
														"src": "2824:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 838,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 846,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 840,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "2842:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 842,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "2864:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 848,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "2893:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:7"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "2677:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "2704:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:7"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:7"
									},
									"scope": 1131,
									"src": "2658:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "3801:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 864,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "3840:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "3848:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 863,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															911,
															955
														],
														"referencedDeclaration": 955,
														"src": "3818:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 862,
												"id": 869,
												"nodeType": "Return",
												"src": "3811:79:7"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "3734:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "3750:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 857,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:7"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "3787:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 860,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:7"
									},
									"scope": 1131,
									"src": "3712:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "4266:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 884,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "4305:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "4313:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 887,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "4322:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 883,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															911,
															955
														],
														"referencedDeclaration": 955,
														"src": "4283:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 882,
												"id": 889,
												"nodeType": "Return",
												"src": "4276:59:7"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4150:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4174:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 875,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4201:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 877,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:7"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "4252:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 880,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:7"
									},
									"scope": 1131,
									"src": "4119:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "4817:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "4856:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 905,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "4864:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 906,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "4870:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 903,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															911,
															955
														],
														"referencedDeclaration": 955,
														"src": "4834:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 902,
												"id": 909,
												"nodeType": "Return",
												"src": "4827:94:7"
											}
										]
									},
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "4735:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "4751:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 895,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "4770:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:7"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "4803:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 900,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:7"
									},
									"scope": 1131,
									"src": "4704:224:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "5355:267:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 928,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1131",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1131",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 926,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 931,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "5398:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 925,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:7"
											},
											{
												"assignments": [
													937,
													939
												],
												"declarations": [
													{
														"constant": false,
														"id": 937,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "5457:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 936,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 939,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "5471:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 938,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"initialValue": {
													"arguments": [
														{
															"id": 944,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "5524:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 940,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "5498:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 942,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "5517:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 948,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "5573:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "5581:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 950,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "5590:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 951,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "5602:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 947,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "5546:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 924,
												"id": 953,
												"nodeType": "Return",
												"src": "5539:76:7"
											}
										]
									},
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5216:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5240:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 915,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5290:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 919,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:7"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5341:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 922,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:7"
									},
									"scope": 1131,
									"src": "5176:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "5899:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 966,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "5935:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "5943:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 965,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															972,
															1001
														],
														"referencedDeclaration": 1001,
														"src": "5916:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 964,
												"id": 970,
												"nodeType": "Return",
												"src": "5909:80:7"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "5827:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "5843:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 959,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:7"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "5885:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 962,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:7"
									},
									"scope": 1131,
									"src": "5799:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "6338:168:7",
										"statements": [
											{
												"assignments": [
													985,
													987
												],
												"declarations": [
													{
														"constant": false,
														"id": 985,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1000,
														"src": "6349:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 984,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 987,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1000,
														"src": "6363:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 986,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"arguments": [
														{
															"id": 990,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "6408:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 988,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "6390:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 994,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "6457:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "6465:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 996,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "6474:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 997,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "6486:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 993,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "6430:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 983,
												"id": 999,
												"nodeType": "Return",
												"src": "6423:76:7"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "6217:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "6241:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 976,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "6268:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 978,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:7"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "6324:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 981,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:7"
									},
									"scope": 1131,
									"src": "6180:326:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "6782:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1012,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "6820:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "6828:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1011,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1018,
															1047
														],
														"referencedDeclaration": 1047,
														"src": "6799:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1010,
												"id": 1016,
												"nodeType": "Return",
												"src": "6792:84:7"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "6715:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "6731:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1005,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:7"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "6768:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1008,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:7"
									},
									"scope": 1131,
									"src": "6685:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "7224:170:7",
										"statements": [
											{
												"assignments": [
													1031,
													1033
												],
												"declarations": [
													{
														"constant": false,
														"id": 1031,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1046,
														"src": "7235:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1030,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1033,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1046,
														"src": "7249:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1032,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1038,
												"initialValue": {
													"arguments": [
														{
															"id": 1036,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "7296:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1034,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "7276:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1040,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "7345:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "7353:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1042,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "7362:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1043,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "7374:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1039,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "7318:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1029,
												"id": 1045,
												"nodeType": "Return",
												"src": "7311:76:7"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "7108:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "7132:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1022,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "7159:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1024,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:7"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "7210:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:7"
									},
									"scope": 1131,
									"src": "7069:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "7876:434:7",
										"statements": [
											{
												"condition": {
													"id": 1061,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1052,
													"src": "7890:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1083,
													"nodeType": "Block",
													"src": "8246:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1079,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "8268:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1080,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "8280:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1078,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1130,
																	"src": "8260:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1082,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:7"
														}
													]
												},
												"id": 1084,
												"nodeType": "IfStatement",
												"src": "7886:418:7",
												"trueBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "7899:341:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1062,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "7917:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1074,
															"nodeType": "IfStatement",
															"src": "7913:286:7",
															"trueBody": {
																"id": 1073,
																"nodeType": "Block",
																"src": "7941:258:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1068,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1050,
																							"src": "8143:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1067,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 819,
																						"src": "8132:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1069,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1070,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1066,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1072,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1075,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "8219:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1060,
															"id": 1076,
															"nodeType": "Return",
															"src": "8212:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "7727:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "7751:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "7773:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1053,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "7806:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1055,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:7"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "7862:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1058,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:7"
									},
									"scope": 1131,
									"src": "7682:628:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "8691:135:7",
										"statements": [
											{
												"condition": {
													"id": 1098,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1089,
													"src": "8705:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "8762:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1103,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "8784:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1104,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "8796:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1102,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1130,
																	"src": "8776:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1106,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:7"
														}
													]
												},
												"id": 1108,
												"nodeType": "IfStatement",
												"src": "8701:119:7",
												"trueBody": {
													"id": 1101,
													"nodeType": "Block",
													"src": "8714:42:7",
													"statements": [
														{
															"expression": {
																"id": 1099,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1091,
																"src": "8735:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1097,
															"id": 1100,
															"nodeType": "Return",
															"src": "8728:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1087,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:7",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "8566:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1088,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "8588:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "8621:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1092,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:7"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "8677:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1095,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:7"
									},
									"scope": 1131,
									"src": "8531:295:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "8915:457:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1117,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "8991:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1127,
													"nodeType": "Block",
													"src": "9321:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1124,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1114,
																		"src": "9342:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1123,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1126,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:7"
														}
													]
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "8987:379:7",
												"trueBody": {
													"id": 1122,
													"nodeType": "Block",
													"src": "9014:301:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9172:133:7",
																"nodeType": "YulBlock",
																"src": "9172:133:7",
																"statements": [
																	{
																		"nativeSrc": "9190:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9219:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9213:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:7"
																			},
																			"nativeSrc": "9213:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9194:15:7",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9258:2:7",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9262:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9254:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:7"
																					},
																					"nativeSrc": "9254:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9275:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9247:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:7"
																			},
																			"nativeSrc": "9247:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:7"
																		},
																		"nativeSrc": "9247:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1112,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1112,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:7",
																	"valueSize": 1
																}
															],
															"id": 1121,
															"nodeType": "InlineAssembly",
															"src": "9163:142:7"
														}
													]
												}
											}
										]
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "8849:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "8874:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1113,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:7"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:7"
									},
									"scope": 1131,
									"src": "8832:540:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1132,
							"src": "194:9180:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9274:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1131
						],
						"ContextUpgradeable": [
							1173
						],
						"Initializable": [
							665
						]
					},
					"id": 1174,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1174,
							"sourceUnit": 666,
							"src": "110:42:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1136,
										"name": "Initializable",
										"nameLocations": [
											"691:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 665,
										"src": "691:13:8"
									},
									"id": 1137,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:8"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1135,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1173,
							"linearizedBaseContracts": [
								1173,
								665
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "763:7:8",
										"statements": []
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1139,
												"name": "onlyInitializing",
												"nameLocations": [
													"746:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 610,
												"src": "746:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:8"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:8"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:8"
									},
									"scope": 1173,
									"src": "711:59:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "838:7:8",
										"statements": []
									},
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1146,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1145,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 610,
												"src": "821:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:8"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:8"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:8"
									},
									"scope": 1173,
									"src": "776:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "912:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1154,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "933:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1153,
												"id": 1156,
												"nodeType": "Return",
												"src": "922:17:8"
											}
										]
									},
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:8"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "903:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:8"
									},
									"scope": 1173,
									"src": "850:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "1019:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1163,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1040:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1162,
												"id": 1165,
												"nodeType": "Return",
												"src": "1029:15:8"
											}
										]
									},
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:8"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1003:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1160,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:8"
									},
									"scope": 1173,
									"src": "952:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:8",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1172,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1173,
									"src": "1316:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1169,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1171,
										"length": {
											"hexValue": "3530",
											"id": 1170,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1174,
							"src": "651:693:8",
							"usedErrors": [],
							"usedEvents": [
								511
							]
						}
					],
					"src": "86:1259:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
					"exportedSymbols": {
						"StorageSlotUpgradeable": [
							1283
						]
					},
					"id": 1284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "193:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlotUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1176,
								"nodeType": "StructuredDocumentation",
								"src": "218:1201:9",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"
							},
							"fullyImplemented": true,
							"id": 1283,
							"linearizedBaseContracts": [
								1283
							],
							"name": "StorageSlotUpgradeable",
							"nameLocation": "1428:22:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlotUpgradeable.AddressSlot",
									"id": 1179,
									"members": [
										{
											"constant": false,
											"id": 1178,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1494:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1179,
											"src": "1486:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1177,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1486:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1464:11:9",
									"nodeType": "StructDefinition",
									"scope": 1283,
									"src": "1457:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BooleanSlot",
									"id": 1182,
									"members": [
										{
											"constant": false,
											"id": 1181,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1546:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1182,
											"src": "1541:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1180,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1541:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1519:11:9",
									"nodeType": "StructDefinition",
									"scope": 1283,
									"src": "1512:46:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Bytes32Slot",
									"id": 1185,
									"members": [
										{
											"constant": false,
											"id": 1184,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1601:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1185,
											"src": "1593:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1183,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1593:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1571:11:9",
									"nodeType": "StructDefinition",
									"scope": 1283,
									"src": "1564:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Uint256Slot",
									"id": 1188,
									"members": [
										{
											"constant": false,
											"id": 1187,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1656:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1188,
											"src": "1648:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1186,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1648:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1626:11:9",
									"nodeType": "StructDefinition",
									"scope": 1283,
									"src": "1619:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.StringSlot",
									"id": 1191,
									"members": [
										{
											"constant": false,
											"id": 1190,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1709:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1191,
											"src": "1702:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1189,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1702:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1681:10:9",
									"nodeType": "StructDefinition",
									"scope": 1283,
									"src": "1674:47:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BytesSlot",
									"id": 1194,
									"members": [
										{
											"constant": false,
											"id": 1193,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1760:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1194,
											"src": "1754:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1192,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1754:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1734:9:9",
									"nodeType": "StructDefinition",
									"scope": 1283,
									"src": "1727:45:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "1954:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2016:38:9",
													"nodeType": "YulBlock",
													"src": "2016:38:9",
													"statements": [
														{
															"nativeSrc": "2030:14:9",
															"nodeType": "YulAssignment",
															"src": "2030:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2040:4:9",
																"nodeType": "YulIdentifier",
																"src": "2040:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2030:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2030:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1201,
														"isOffset": false,
														"isSlot": true,
														"src": "2030:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1197,
														"isOffset": false,
														"isSlot": false,
														"src": "2040:4:9",
														"valueSize": 1
													}
												],
												"id": 1203,
												"nodeType": "InlineAssembly",
												"src": "2007:47:9"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "1778:87:9",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1879:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1902:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "1894:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1196,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:14:9"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1951:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "1931:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1179_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.AddressSlot"
												},
												"typeName": {
													"id": 1200,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1199,
														"name": "AddressSlot",
														"nameLocations": [
															"1931:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1179,
														"src": "1931:11:9"
													},
													"referencedDeclaration": 1179,
													"src": "1931:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1179_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1930:23:9"
									},
									"scope": 1283,
									"src": "1870:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "2242:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2304:38:9",
													"nodeType": "YulBlock",
													"src": "2304:38:9",
													"statements": [
														{
															"nativeSrc": "2318:14:9",
															"nodeType": "YulAssignment",
															"src": "2318:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2328:4:9",
																"nodeType": "YulIdentifier",
																"src": "2328:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2318:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1212,
														"isOffset": false,
														"isSlot": true,
														"src": "2318:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1208,
														"isOffset": false,
														"isSlot": false,
														"src": "2328:4:9",
														"valueSize": 1
													}
												],
												"id": 1214,
												"nodeType": "InlineAssembly",
												"src": "2295:47:9"
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "2066:87:9",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2167:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2190:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "2182:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1207,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:14:9"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2239:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "2219:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1182_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
												},
												"typeName": {
													"id": 1211,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1210,
														"name": "BooleanSlot",
														"nameLocations": [
															"2219:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1182,
														"src": "2219:11:9"
													},
													"referencedDeclaration": 1182,
													"src": "2219:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1182_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2218:23:9"
									},
									"scope": 1283,
									"src": "2158:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "2530:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2592:38:9",
													"nodeType": "YulBlock",
													"src": "2592:38:9",
													"statements": [
														{
															"nativeSrc": "2606:14:9",
															"nodeType": "YulAssignment",
															"src": "2606:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2616:4:9",
																"nodeType": "YulIdentifier",
																"src": "2616:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2606:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1223,
														"isOffset": false,
														"isSlot": true,
														"src": "2606:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1219,
														"isOffset": false,
														"isSlot": false,
														"src": "2616:4:9",
														"valueSize": 1
													}
												],
												"id": 1225,
												"nodeType": "InlineAssembly",
												"src": "2583:47:9"
											}
										]
									},
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "2354:87:9",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2455:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2478:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "2470:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:14:9"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2527:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "2507:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1185_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
												},
												"typeName": {
													"id": 1222,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1221,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2507:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1185,
														"src": "2507:11:9"
													},
													"referencedDeclaration": 1185,
													"src": "2507:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1185_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:23:9"
									},
									"scope": 1283,
									"src": "2446:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "2818:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2880:38:9",
													"nodeType": "YulBlock",
													"src": "2880:38:9",
													"statements": [
														{
															"nativeSrc": "2894:14:9",
															"nodeType": "YulAssignment",
															"src": "2894:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2904:4:9",
																"nodeType": "YulIdentifier",
																"src": "2904:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2894:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2894:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1234,
														"isOffset": false,
														"isSlot": true,
														"src": "2894:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1230,
														"isOffset": false,
														"isSlot": false,
														"src": "2904:4:9",
														"valueSize": 1
													}
												],
												"id": 1236,
												"nodeType": "InlineAssembly",
												"src": "2871:47:9"
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "2642:87:9",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2743:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2766:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "2758:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:14:9"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2815:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "2795:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1188_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
												},
												"typeName": {
													"id": 1233,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1232,
														"name": "Uint256Slot",
														"nameLocations": [
															"2795:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1188,
														"src": "2795:11:9"
													},
													"referencedDeclaration": 1188,
													"src": "2795:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1188_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2794:23:9"
									},
									"scope": 1283,
									"src": "2734:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "3103:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3165:38:9",
													"nodeType": "YulBlock",
													"src": "3165:38:9",
													"statements": [
														{
															"nativeSrc": "3179:14:9",
															"nodeType": "YulAssignment",
															"src": "3179:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "3189:4:9",
																"nodeType": "YulIdentifier",
																"src": "3189:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3179:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3179:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1245,
														"isOffset": false,
														"isSlot": true,
														"src": "3179:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1241,
														"isOffset": false,
														"isSlot": false,
														"src": "3189:4:9",
														"valueSize": 1
													}
												],
												"id": 1247,
												"nodeType": "InlineAssembly",
												"src": "3156:47:9"
											}
										]
									},
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "2930:86:9",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3030:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3052:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "3044:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3044:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3043:14:9"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3100:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "3081:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1191_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.StringSlot"
												},
												"typeName": {
													"id": 1244,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1243,
														"name": "StringSlot",
														"nameLocations": [
															"3081:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1191,
														"src": "3081:10:9"
													},
													"referencedDeclaration": 1191,
													"src": "3081:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1191_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3080:22:9"
									},
									"scope": 1283,
									"src": "3021:188:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "3411:112:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3473:44:9",
													"nodeType": "YulBlock",
													"src": "3473:44:9",
													"statements": [
														{
															"nativeSrc": "3487:20:9",
															"nodeType": "YulAssignment",
															"src": "3487:20:9",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3497:10:9",
																"nodeType": "YulIdentifier",
																"src": "3497:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3487:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1256,
														"isOffset": false,
														"isSlot": true,
														"src": "3487:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1252,
														"isOffset": false,
														"isSlot": true,
														"src": "3497:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1258,
												"nodeType": "InlineAssembly",
												"src": "3464:53:9"
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "3215:101:9",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3330:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3359:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3344:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1251,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3344:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3343:22:9"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3408:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3389:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1191_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.StringSlot"
												},
												"typeName": {
													"id": 1255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1254,
														"name": "StringSlot",
														"nameLocations": [
															"3389:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1191,
														"src": "3389:10:9"
													},
													"referencedDeclaration": 1191,
													"src": "3389:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1191_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3388:22:9"
									},
									"scope": 1283,
									"src": "3321:202:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "3699:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3761:38:9",
													"nodeType": "YulBlock",
													"src": "3761:38:9",
													"statements": [
														{
															"nativeSrc": "3775:14:9",
															"nodeType": "YulAssignment",
															"src": "3775:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "3785:4:9",
																"nodeType": "YulIdentifier",
																"src": "3785:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3775:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3775:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1267,
														"isOffset": false,
														"isSlot": true,
														"src": "3775:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1263,
														"isOffset": false,
														"isSlot": false,
														"src": "3785:4:9",
														"valueSize": 1
													}
												],
												"id": 1269,
												"nodeType": "InlineAssembly",
												"src": "3752:47:9"
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "3529:85:9",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3628:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3649:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "3641:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3640:14:9"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3696:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "3678:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1194_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BytesSlot"
												},
												"typeName": {
													"id": 1266,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1265,
														"name": "BytesSlot",
														"nameLocations": [
															"3678:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1194,
														"src": "3678:9:9"
													},
													"referencedDeclaration": 1194,
													"src": "3678:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1194_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3677:21:9"
									},
									"scope": 1283,
									"src": "3619:186:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "4002:112:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4064:44:9",
													"nodeType": "YulBlock",
													"src": "4064:44:9",
													"statements": [
														{
															"nativeSrc": "4078:20:9",
															"nodeType": "YulAssignment",
															"src": "4078:20:9",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4088:10:9",
																"nodeType": "YulIdentifier",
																"src": "4088:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4078:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4078:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1278,
														"isOffset": false,
														"isSlot": true,
														"src": "4078:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1274,
														"isOffset": false,
														"isSlot": true,
														"src": "4088:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1280,
												"nodeType": "InlineAssembly",
												"src": "4055:53:9"
											}
										]
									},
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "3811:99:9",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3924:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3951:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3937:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3937:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3936:21:9"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3999:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3981:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1194_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BytesSlot"
												},
												"typeName": {
													"id": 1277,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1276,
														"name": "BytesSlot",
														"nameLocations": [
															"3981:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1194,
														"src": "3981:9:9"
													},
													"referencedDeclaration": 1194,
													"src": "3981:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1194_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:21:9"
									},
									"scope": 1283,
									"src": "3915:199:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1284,
							"src": "1420:2696:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3924:9"
				},
				"id": 9
			},
			"erc1967/UUPS-Proxy-V1.sol": {
				"ast": {
					"absolutePath": "erc1967/UUPS-Proxy-V1.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1131
						],
						"ContextUpgradeable": [
							1173
						],
						"ERC1967UpgradeUpgradeable": [
							486
						],
						"IBeaconUpgradeable": [
							496
						],
						"IERC1822ProxiableUpgradeable": [
							162
						],
						"IERC1967Upgradeable": [
							152
						],
						"Initializable": [
							665
						],
						"MyToken": [
							1333
						],
						"OwnableUpgradeable": [
							131
						],
						"StorageSlotUpgradeable": [
							1283
						],
						"UUPSUpgradeable": [
							801
						]
					},
					"id": 1334,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1285,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 132,
							"src": "57:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 666,
							"src": "133:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1334,
							"sourceUnit": 802,
							"src": "209:77:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1289,
										"name": "Initializable",
										"nameLocations": [
											"308:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 665,
										"src": "308:13:10"
									},
									"id": 1290,
									"nodeType": "InheritanceSpecifier",
									"src": "308:13:10"
								},
								{
									"baseName": {
										"id": 1291,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"323:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "323:18:10"
									},
									"id": 1292,
									"nodeType": "InheritanceSpecifier",
									"src": "323:18:10"
								},
								{
									"baseName": {
										"id": 1293,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"343:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 801,
										"src": "343:15:10"
									},
									"id": 1294,
									"nodeType": "InheritanceSpecifier",
									"src": "343:15:10"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1333,
							"linearizedBaseContracts": [
								1333,
								801,
								486,
								152,
								162,
								131,
								1173,
								665
							],
							"name": "MyToken",
							"nameLocation": "297:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "365:48:10",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"functionSelector": "06661abd",
									"id": 1297,
									"mutability": "mutable",
									"name": "count",
									"nameLocation": "433:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1333,
									"src": "418:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1296,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "418:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "459:39:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1300,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "469:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "469:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "ExpressionStatement",
												"src": "469:22:10"
											}
										]
									},
									"id": 1304,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:2:10"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "459:0:10"
									},
									"scope": 1333,
									"src": "445:53:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "545:67:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1309,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "555:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "555:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "555:16:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1312,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "581:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "581:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "581:24:10"
											}
										]
									},
									"functionSelector": "8129fc1c",
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1307,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1306,
												"name": "initializer",
												"nameLocations": [
													"526:11:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 567,
												"src": "526:11:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "526:11:10"
										}
									],
									"name": "initialize",
									"nameLocation": "513:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "523:2:10"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "545:0:10"
									},
									"scope": 1333,
									"src": "504:108:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										795
									],
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "728:8:10",
										"statements": []
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1321,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1320,
												"name": "onlyOwner",
												"nameLocations": [
													"697:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "697:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "697:9:10"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "627:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1322,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "715:8:10"
									},
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "653:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "645:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:27:10"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "728:0:10"
									},
									"scope": 1333,
									"src": "618:118:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "770:28:10",
										"statements": [
											{
												"expression": {
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "784:7:10",
													"subExpression": {
														"id": 1328,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "784:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "784:7:10"
											}
										]
									},
									"functionSelector": "371303c0",
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "inc",
									"nameLocation": "755:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:2:10"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:0:10"
									},
									"scope": 1333,
									"src": "746:52:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1334,
							"src": "288:512:10",
							"usedErrors": [],
							"usedEvents": [
								16,
								139,
								146,
								151,
								511
							]
						}
					],
					"src": "32:768:10"
				},
				"id": 10
			}
		}
	}
}